
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightREDUCErightELSEleftOUleftANDleftIGUALDIFERENTEleftMAIORMAIOR_IGUALMENORMENOR_IGUALleftMAISMENOSleftASTERISCOBARRAMODrightNEGACAOrightMAIS_MAISMENOS_MENOSrightATRIBUICAOrightUASTERISCOUMENOSUMAISUNEGACAOE_COMERCIALAND ASPA_DUPLA ASPA_SIMPLES ASTERISCO ATRIBUICAO BARRA BOOLEAN BREAK CHAR CONST_CHAR CONST_STRING CONTINUE DIFERENTE DO ELSE E_COMERCIAL FALSE FLOAT FOR ID IF IGUAL INT L_CHAVE L_COCHETE L_PARENTESE MAIN MAIOR MAIOR_IGUAL MAIS MAIS_MAIS MENOR MENOR_IGUAL MENOS MENOS_MENOS MOD NEGACAO NUMERO_INT NUMERO_REAL OU PONTO PONTO_VIRGULA PRINTF RETURN R_CHAVE R_COCHETE R_PARENTESE SCANF TRUE VIRGULA VOID WHILEmain : INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVEstm : declaracao\n         | equacao\n         | condicional\n         | estrutura_repeticao\n         | mostrar\n         | entrada\n         | break\n         | continue\n         | bloco_stm\n         | lambdabloco_stm : bloco stmlambda : break : BREAK PONTO_VIRGULA stmcontinue : CONTINUE PONTO_VIRGULA stmtipo : tipo_VOID\n          | tipo_BOOLEAN\n          | tipo_CHAR\n          | tipo_INT\n          | tipo_FLOATtipo_VOID : VOIDtipo_BOOLEAN : BOOLEANtipo_CHAR : CHARtipo_INT : INTtipo_FLOAT : FLOATbloco : L_CHAVE stm R_CHAVEpointer : pointer ASTERISCO\n             | lambdadeclaracao : tipo pointer ID PONTO_VIRGULA stm\n                | tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm\n                | tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm\n                | tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm\n                | tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm\n                | tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stmatribuicao_vet : expression VIRGULA atribuicao_vet\n                    | expressionatribuicao_mat : L_CHAVE atribuicao_vet R_CHAVE VIRGULA atribuicao_mat\n                    | L_CHAVE atribuicao_vet R_CHAVEequacao : pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm\n             | pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm\n             | pointer ID ATRIBUICAO expression PONTO_VIRGULA stmarg : expression\n         | lambdamore_arg : more_arg L_COCHETE arg R_COCHETE\n              | lambdamostrar : mostrar1\n             | mostrar2mostrar1 : PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stmmostrar2 : PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stmexpression_mostrar : CONST_STRING VIRGULA expression expression_mostrar\n                        | VIRGULA expression\n                        | lambdaentrada : SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stmexpression_entrada : CONST_STRING VIRGULA E_COMERCIAL ID expression_entrada\n                        | VIRGULA E_COMERCIAL ID expression_entrada\n                        | lambdaexp_and : exp AND expexp_ou : exp OU expexp_menor : exp MENOR expexp_maior : exp MAIOR expexp_menor_igual : exp MENOR_IGUAL expexp_maior_igual : exp MAIOR_IGUAL expexp_igual : exp IGUAL expexp_diferente : exp DIFERENTE expexp_menos : exp MENOS expexp_mais : exp MAIS expexp_asterisco : exp ASTERISCO expexp_barra : exp BARRA expexp_mod : exp MOD expmenos_exp : MENOS exp %prec UMENOSmais_exp : MAIS exp %prec UMAISasterisco_exp : ASTERISCO exp %prec UASTERISCOnegacao_exp : NEGACAO exp %prec UNEGACAOe_comercial_exp : E_COMERCIAL expconst_virgula : VIRGULAconst_ponto : PONTOconst_numero_real : NUMERO_REALconst_numero_int : NUMERO_INTconst_char : CONST_CHARconst_string : CONST_STRINGmais_mais : MAIS_MAISmenos_menos : MENOS_MENOSid : IDtrue : TRUEfalse : FALSEid_atribuicao_exp : ID ATRIBUICAO expid_cochete_exp : ID L_COCHETE exp R_COCHETEparentese_exp : L_PARENTESE exp R_PARENTESEchave_exp : L_CHAVE exp R_CHAVEexp  : exp_and\n          | exp_ou\n          | exp_menor\n          | exp_maior\n          | exp_menor_igual\n          | exp_maior_igual\n          | exp_igual\n          | exp_diferente\n          | exp_menos\n          | exp_mais\n          | exp_asterisco\n          | exp_barra\n          | exp_mod\n          | menos_exp\n          | mais_exp\n          | asterisco_exp\n          | negacao_exp\n          | e_comercial_exp\n          | const_virgula\n          | const_ponto\n          | const_numero_real\n          | const_numero_int\n          | const_char\n          | const_string\n          | mais_mais\n          | menos_menos\n          | id\n          | true\n          | false\n          | id_atribuicao_exp\n          | id_cochete_exp\n          | parentese_exp\n          | chave_expexpression : exp\n                | extras\n                | aspa_dupla_exp\n                | aspa_simples_expaspa_dupla_exp : ASPA_DUPLA exp ASPA_DUPLAaspa_simples_exp : ASPA_SIMPLES exp ASPA_SIMPLESextras : L_PARENTESE tipo R_PARENTESE expcondicional : IF L_PARENTESE expression R_PARENTESE stm %prec REDUCE\n                 | IF L_PARENTESE expression R_PARENTESE stm ELSE stmestrutura_repeticao : for\n                         | while\n                         | do_whilefor : FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm\n         | FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stmwhile : WHILE L_PARENTESE expression R_PARENTESE bloco stmdo_while : DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm'
    
_lr_action_items = {'INT':([0,6,8,31,53,54,56,60,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[2,7,7,7,7,7,7,-26,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'$end':([1,186,],[0,-1,]),'MAIN':([2,],[3,]),'L_PARENTESE':([3,22,28,37,38,40,46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,134,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[4,51,52,56,57,59,61,61,61,61,139,139,139,139,139,139,139,139,139,61,61,178,61,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,61,61,61,61,61,139,61,61,61,61,61,61,61,61,61,61,61,]),'R_PARENTESE':([4,7,32,33,34,35,36,41,42,43,44,52,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,122,123,126,130,132,133,135,136,138,140,141,159,160,161,162,163,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,212,216,218,220,221,229,230,232,237,246,248,266,274,],[5,-24,-16,-17,-18,-19,-20,-21,-22,-23,-25,-13,-13,-123,-124,-125,-126,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,171,172,-56,-42,-43,177,179,181,-52,183,184,-70,-71,-72,-73,-74,-51,-88,-89,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-127,-128,-86,-13,234,-13,-129,-87,-13,-55,-13,-50,-54,257,-13,282,]),'L_CHAVE':([5,6,8,31,39,46,51,53,54,56,57,60,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,166,167,168,171,176,177,178,180,183,208,210,213,215,217,219,222,224,225,227,232,240,241,242,247,249,253,255,257,260,266,267,271,272,273,276,277,278,282,284,287,288,293,],[6,8,8,8,8,62,62,8,8,62,62,-26,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,8,62,62,8,62,8,62,62,62,8,8,62,8,8,8,8,62,62,8,62,62,8,253,62,8,62,8,8,8,62,8,62,62,62,8,284,253,8,253,8,8,8,]),'IF':([6,8,31,53,54,60,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[22,22,22,22,22,-26,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'SCANF':([6,8,31,53,54,60,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[28,28,28,28,28,-26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'BREAK':([6,8,31,53,54,60,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[29,29,29,29,29,-26,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'CONTINUE':([6,8,31,53,54,60,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[30,30,30,30,30,-26,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'RETURN':([6,9,10,11,12,13,14,15,16,17,18,19,23,24,25,26,27,31,53,54,55,60,127,128,166,171,204,208,209,210,215,217,219,222,226,227,228,233,235,238,239,241,245,249,251,255,258,260,265,267,269,275,276,283,287,288,290,291,293,294,],[-13,46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-132,-133,-134,-46,-47,-13,-13,-13,-12,-26,-14,-15,-13,-13,-29,-13,-130,-13,-13,-13,-13,-13,-41,-13,-53,-137,-48,-49,-30,-13,-131,-13,-31,-13,-138,-13,-39,-13,-32,-136,-13,-33,-13,-13,-40,-135,-13,-34,]),'ID':([6,7,8,19,20,21,31,32,33,34,35,36,41,42,43,44,46,47,48,50,51,53,54,56,57,60,61,62,101,102,103,104,105,106,107,120,121,129,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,166,167,168,171,174,176,178,180,183,208,210,211,213,215,217,219,222,224,225,227,232,240,241,247,249,253,255,260,266,267,271,272,273,276,287,288,293,],[-13,-24,-13,-28,-13,49,-13,-16,-17,-18,-19,-20,-21,-22,-23,-25,116,119,-28,-27,116,-13,-13,116,116,-26,116,116,116,116,116,116,116,116,116,116,116,175,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-13,116,116,-13,212,116,116,116,116,-13,-13,229,116,-13,-13,-13,-13,116,116,-13,116,116,-13,116,-13,116,-13,-13,116,-13,116,116,116,-13,-13,-13,-13,]),'ASTERISCO':([6,7,8,19,20,21,31,32,33,34,35,36,41,42,43,44,46,47,48,50,51,53,54,56,57,60,61,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,137,139,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,171,176,178,180,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,208,210,213,215,217,219,220,221,222,224,225,227,232,240,241,247,249,253,255,260,266,267,271,272,273,276,287,288,293,],[-13,-24,-13,-28,-13,50,-13,-16,-17,-18,-19,-20,-21,-22,-23,-25,105,50,-28,-27,105,-13,-13,105,105,-26,105,105,154,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,105,105,105,105,105,105,105,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,105,105,105,105,154,154,105,105,105,105,105,105,105,105,105,105,105,105,105,154,154,-70,-71,-72,-73,-74,105,105,-13,105,105,-13,105,105,105,105,-88,-89,154,154,154,154,154,154,154,154,154,154,-67,-68,-69,-86,154,-13,-13,105,-13,-13,-13,154,-87,-13,105,105,-13,105,105,-13,105,-13,105,-13,-13,105,-13,105,105,105,-13,-13,-13,-13,]),'FOR':([6,8,31,53,54,60,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[37,37,37,37,37,-26,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'WHILE':([6,8,31,53,54,58,60,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[38,38,38,38,38,134,-26,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'DO':([6,8,31,53,54,60,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[39,39,39,39,39,-26,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'PRINTF':([6,8,31,53,54,60,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[40,40,40,40,40,-26,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'VOID':([6,8,31,53,54,56,60,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[41,41,41,41,41,41,-26,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'BOOLEAN':([6,8,31,53,54,56,60,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[42,42,42,42,42,42,-26,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'CHAR':([6,8,31,53,54,56,60,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[43,43,43,43,43,43,-26,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'FLOAT':([6,8,31,53,54,56,60,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[44,44,44,44,44,44,-26,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'R_CHAVE':([8,10,11,12,13,14,15,16,17,18,19,23,24,25,26,27,31,45,53,54,55,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,127,128,142,143,159,160,161,162,163,166,171,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,208,209,210,215,217,219,220,221,222,226,227,228,233,235,238,239,241,245,249,251,255,258,260,261,262,265,267,269,270,275,276,279,283,285,287,288,289,290,291,293,294,],[-13,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-132,-133,-134,-46,-47,-13,60,-13,-13,-12,-26,-123,-124,-125,-126,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-14,-15,185,186,-70,-71,-72,-73,-74,-13,-13,-88,-89,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-127,-128,-86,-29,-13,-130,-13,-13,-13,-13,-129,-87,-13,-41,-13,-53,-137,-48,-49,-30,-13,-131,-13,-31,-13,-138,-13,270,-36,-39,-13,-32,-38,-136,-13,-35,-33,-37,-13,-13,292,-40,-135,-13,-34,]),'ELSE':([10,11,12,13,14,15,16,17,18,19,23,24,25,26,27,31,53,54,55,60,127,128,166,171,204,208,209,210,215,217,219,222,226,227,228,233,235,238,239,241,245,249,251,255,258,260,265,267,269,275,276,283,287,288,290,291,293,294,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-132,-133,-134,-46,-47,-13,-13,-13,-12,-26,-14,-15,-13,-13,-29,-13,227,-13,-13,-13,-13,-13,-41,-13,-53,-137,-48,-49,-30,-13,-131,-13,-31,-13,-138,-13,-39,-13,-32,-136,-13,-33,-13,-13,-40,-135,-13,-34,]),'PONTO_VIRGULA':([29,30,56,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,119,130,131,132,159,160,161,162,163,170,172,176,179,181,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,214,220,221,223,231,234,244,247,252,256,259,264,268,270,281,285,286,292,],[53,54,-13,143,-123,-124,-125,-126,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,166,-42,176,-43,-70,-71,-72,-73,-74,208,210,-13,217,219,-88,-89,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-127,-128,-86,222,232,-129,-87,241,247,249,255,-13,260,266,-13,-45,276,-38,287,-37,-44,293,]),'ASPA_DUPLA':([46,51,56,57,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,120,121,137,157,159,160,161,162,163,167,168,176,178,180,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,213,221,224,225,232,240,247,253,266,271,272,273,],[101,101,101,101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,101,101,101,200,-70,-71,-72,-73,-74,101,101,101,101,101,-88,-89,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-86,101,-87,101,101,101,101,101,101,101,101,101,101,]),'ASPA_SIMPLES':([46,51,56,57,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,120,121,137,158,159,160,161,162,163,167,168,176,178,180,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,213,221,224,225,232,240,247,253,266,271,272,273,],[102,102,102,102,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,102,102,102,201,-70,-71,-72,-73,-74,102,102,102,102,102,-88,-89,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-86,102,-87,102,102,102,102,102,102,102,102,102,102,]),'MENOS':([46,51,56,57,61,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,137,139,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,176,178,180,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,213,220,221,224,225,232,240,247,253,266,271,272,273,],[103,103,103,103,103,103,152,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,103,103,103,103,103,103,103,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,103,103,103,103,152,152,103,103,103,103,103,103,103,103,103,103,103,103,103,152,152,-70,-71,-72,-73,-74,103,103,103,103,103,103,103,103,-88,-89,152,152,152,152,152,152,152,152,-65,-66,-67,-68,-69,-86,152,103,152,-87,103,103,103,103,103,103,103,103,103,103,]),'MAIS':([46,51,56,57,61,62,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,137,139,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,176,178,180,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,213,220,221,224,225,232,240,247,253,266,271,272,273,],[104,104,104,104,104,104,153,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,104,104,104,104,104,104,104,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,104,104,104,104,153,153,104,104,104,104,104,104,104,104,104,104,104,104,104,153,153,-70,-71,-72,-73,-74,104,104,104,104,104,104,104,104,-88,-89,153,153,153,153,153,153,153,153,-65,-66,-67,-68,-69,-86,153,104,153,-87,104,104,104,104,104,104,104,104,104,104,]),'NEGACAO':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'E_COMERCIAL':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,125,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,173,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,174,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,211,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'VIRGULA':([46,51,52,56,57,59,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,124,135,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,163,164,165,167,168,176,178,180,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,212,213,218,220,221,224,225,229,232,236,240,247,253,262,266,270,271,272,273,],[108,108,125,108,108,137,108,108,-123,-124,-125,-126,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,108,108,108,108,108,108,108,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,108,108,173,180,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-70,-71,-72,-73,-74,108,108,108,108,108,108,108,108,-88,-89,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-127,-128,-86,125,108,137,-129,-87,108,108,125,108,180,108,108,108,271,108,278,108,108,108,]),'PONTO':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'NUMERO_REAL':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'NUMERO_INT':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'CONST_CHAR':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'CONST_STRING':([46,51,52,56,57,59,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,159,160,161,162,163,164,165,167,168,176,178,180,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,212,213,218,220,221,224,225,229,232,240,247,253,266,271,272,273,],[113,113,124,113,113,135,113,113,-123,-124,-125,-126,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,113,113,113,113,113,113,113,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-70,-71,-72,-73,-74,113,113,113,113,113,113,113,113,-88,-89,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-127,-128,-86,124,113,236,-129,-87,113,113,124,113,113,113,113,113,113,113,113,]),'MAIS_MAIS':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'MENOS_MENOS':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'TRUE':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'FALSE':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'L_COCHETE':([49,116,119,207,223,254,259,263,264,268,286,],[120,165,168,224,240,-13,-13,272,-45,272,-44,]),'ATRIBUICAO':([49,116,119,175,207,223,254,259,263,264,268,286,],[121,164,167,213,225,242,-13,-13,273,-45,277,-44,]),'R_COCHETE':([64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,120,130,132,159,160,161,162,163,168,169,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,220,221,224,240,243,250,272,280,],[-123,-124,-125,-126,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-13,-42,-43,-70,-71,-72,-73,-74,-13,207,-88,-89,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-127,-128,-86,221,223,-129,-87,-13,-13,254,259,-13,286,]),'AND':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[144,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,144,144,144,144,-70,-71,-72,-73,-74,-88,-89,-57,144,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-86,144,144,-87,]),'OU':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[145,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,145,145,145,145,-70,-71,-72,-73,-74,-88,-89,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-86,145,145,-87,]),'MENOR':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[146,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,146,146,146,146,-70,-71,-72,-73,-74,-88,-89,146,146,-59,-60,-61,-62,146,146,-65,-66,-67,-68,-69,-86,146,146,-87,]),'MAIOR':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[147,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,147,147,147,147,-70,-71,-72,-73,-74,-88,-89,147,147,-59,-60,-61,-62,147,147,-65,-66,-67,-68,-69,-86,147,147,-87,]),'MENOR_IGUAL':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[148,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,148,148,148,148,-70,-71,-72,-73,-74,-88,-89,148,148,-59,-60,-61,-62,148,148,-65,-66,-67,-68,-69,-86,148,148,-87,]),'MAIOR_IGUAL':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[149,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,149,149,149,149,-70,-71,-72,-73,-74,-88,-89,149,149,-59,-60,-61,-62,149,149,-65,-66,-67,-68,-69,-86,149,149,-87,]),'IGUAL':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[150,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,150,150,150,150,-70,-71,-72,-73,-74,-88,-89,150,150,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-86,150,150,-87,]),'DIFERENTE':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[151,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,151,151,151,151,-70,-71,-72,-73,-74,-88,-89,151,151,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-86,151,151,-87,]),'BARRA':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[155,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,155,155,155,155,-70,-71,-72,-73,-74,-88,-89,155,155,155,155,155,155,155,155,155,155,-67,-68,-69,-86,155,155,-87,]),'MOD':([64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,112,113,114,115,116,117,118,141,142,157,158,159,160,161,162,163,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,220,221,],[156,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,156,156,156,156,-70,-71,-72,-73,-74,-88,-89,156,156,156,156,156,156,156,156,156,156,-67,-68,-69,-86,156,156,-87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'stm':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[9,45,55,127,128,204,209,226,228,233,235,238,239,245,251,258,265,269,275,283,290,291,294,]),'declaracao':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'equacao':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'condicional':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'estrutura_repeticao':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'mostrar':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'entrada':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'break':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'continue':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'bloco_stm':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'lambda':([6,8,20,31,52,53,54,56,59,120,166,168,171,176,208,210,212,215,217,218,219,222,224,227,229,232,240,241,247,249,254,255,259,260,266,267,272,276,287,288,293,],[19,19,48,19,126,19,19,132,138,132,19,132,19,132,19,19,126,19,19,138,19,19,132,19,126,132,132,19,132,19,264,19,264,19,132,19,132,19,19,19,19,]),'tipo':([6,8,31,53,54,56,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[20,20,20,20,20,129,140,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'pointer':([6,8,20,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[21,21,47,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'for':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'while':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'do_while':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'mostrar1':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'mostrar2':([6,8,31,53,54,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'bloco':([6,8,31,39,53,54,166,171,177,208,210,215,217,219,222,227,241,249,255,257,260,267,276,282,287,288,293,],[31,31,31,58,31,31,31,31,215,31,31,31,31,31,31,31,31,31,31,267,31,31,31,288,31,31,31,]),'tipo_VOID':([6,8,31,53,54,56,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'tipo_BOOLEAN':([6,8,31,53,54,56,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'tipo_CHAR':([6,8,31,53,54,56,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'tipo_INT':([6,8,31,53,54,56,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'tipo_FLOAT':([6,8,31,53,54,56,61,166,171,208,210,215,217,219,222,227,241,249,255,260,267,276,287,288,293,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expression':([46,51,56,57,120,121,137,167,168,176,178,180,213,224,225,232,240,247,253,266,271,272,273,],[63,122,130,133,130,170,182,205,130,130,216,218,231,130,244,130,130,130,262,130,262,130,281,]),'exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[64,64,64,64,141,142,157,158,159,160,161,162,163,64,64,64,141,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,64,64,64,64,64,220,64,64,64,64,64,64,64,64,64,64,64,]),'extras':([46,51,56,57,120,121,137,167,168,176,178,180,213,224,225,232,240,247,253,266,271,272,273,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'aspa_dupla_exp':([46,51,56,57,120,121,137,167,168,176,178,180,213,224,225,232,240,247,253,266,271,272,273,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'aspa_simples_exp':([46,51,56,57,120,121,137,167,168,176,178,180,213,224,225,232,240,247,253,266,271,272,273,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'exp_and':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'exp_ou':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'exp_menor':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'exp_maior':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'exp_menor_igual':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'exp_maior_igual':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'exp_igual':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'exp_diferente':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'exp_menos':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'exp_mais':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'exp_asterisco':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'exp_barra':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'exp_mod':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'menos_exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'mais_exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'asterisco_exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'negacao_exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'e_comercial_exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'const_virgula':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'const_ponto':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'const_numero_real':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'const_numero_int':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'const_char':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'const_string':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'mais_mais':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'menos_menos':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'id':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'true':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'false':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'id_atribuicao_exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'id_cochete_exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'parentese_exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'chave_exp':([46,51,56,57,61,62,101,102,103,104,105,106,107,120,121,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,164,165,167,168,176,178,180,183,213,224,225,232,240,247,253,266,271,272,273,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'expression_entrada':([52,212,229,],[123,230,246,]),'arg':([56,120,168,176,224,232,240,247,266,272,],[131,169,206,214,243,248,250,256,274,280,]),'expression_mostrar':([59,218,],[136,237,]),'atribuicao_mat':([242,278,284,],[252,285,289,]),'atribuicao_vet':([253,271,],[261,279,]),'more_arg':([254,259,],[263,268,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVE','main',10,'p_main','analisador_sintatico.py',40),
  ('stm -> declaracao','stm',1,'p_init_programa','analisador_sintatico.py',48),
  ('stm -> equacao','stm',1,'p_init_programa','analisador_sintatico.py',49),
  ('stm -> condicional','stm',1,'p_init_programa','analisador_sintatico.py',50),
  ('stm -> estrutura_repeticao','stm',1,'p_init_programa','analisador_sintatico.py',51),
  ('stm -> mostrar','stm',1,'p_init_programa','analisador_sintatico.py',52),
  ('stm -> entrada','stm',1,'p_init_programa','analisador_sintatico.py',53),
  ('stm -> break','stm',1,'p_init_programa','analisador_sintatico.py',54),
  ('stm -> continue','stm',1,'p_init_programa','analisador_sintatico.py',55),
  ('stm -> bloco_stm','stm',1,'p_init_programa','analisador_sintatico.py',56),
  ('stm -> lambda','stm',1,'p_init_programa','analisador_sintatico.py',57),
  ('bloco_stm -> bloco stm','bloco_stm',2,'p_bloco_stm','analisador_sintatico.py',62),
  ('lambda -> <empty>','lambda',0,'p_lambda','analisador_sintatico.py',67),
  ('break -> BREAK PONTO_VIRGULA stm','break',3,'p_break','analisador_sintatico.py',73),
  ('continue -> CONTINUE PONTO_VIRGULA stm','continue',3,'p_continue','analisador_sintatico.py',79),
  ('tipo -> tipo_VOID','tipo',1,'p_tipo','analisador_sintatico.py',86),
  ('tipo -> tipo_BOOLEAN','tipo',1,'p_tipo','analisador_sintatico.py',87),
  ('tipo -> tipo_CHAR','tipo',1,'p_tipo','analisador_sintatico.py',88),
  ('tipo -> tipo_INT','tipo',1,'p_tipo','analisador_sintatico.py',89),
  ('tipo -> tipo_FLOAT','tipo',1,'p_tipo','analisador_sintatico.py',90),
  ('tipo_VOID -> VOID','tipo_VOID',1,'p_tipo_VOID','analisador_sintatico.py',96),
  ('tipo_BOOLEAN -> BOOLEAN','tipo_BOOLEAN',1,'p_tipo_BOOLEAN','analisador_sintatico.py',100),
  ('tipo_CHAR -> CHAR','tipo_CHAR',1,'p_tipo_CHAR','analisador_sintatico.py',104),
  ('tipo_INT -> INT','tipo_INT',1,'p_tipo_INT','analisador_sintatico.py',108),
  ('tipo_FLOAT -> FLOAT','tipo_FLOAT',1,'p_tipo_FLOAT','analisador_sintatico.py',112),
  ('bloco -> L_CHAVE stm R_CHAVE','bloco',3,'p_bloco','analisador_sintatico.py',117),
  ('pointer -> pointer ASTERISCO','pointer',2,'p_pointer','analisador_sintatico.py',124),
  ('pointer -> lambda','pointer',1,'p_pointer','analisador_sintatico.py',125),
  ('declaracao -> tipo pointer ID PONTO_VIRGULA stm','declaracao',5,'p_declaracao','analisador_sintatico.py',134),
  ('declaracao -> tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm','declaracao',7,'p_declaracao','analisador_sintatico.py',135),
  ('declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm','declaracao',8,'p_declaracao','analisador_sintatico.py',136),
  ('declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm','declaracao',10,'p_declaracao','analisador_sintatico.py',137),
  ('declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm','declaracao',12,'p_declaracao','analisador_sintatico.py',138),
  ('declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm','declaracao',16,'p_declaracao','analisador_sintatico.py',139),
  ('atribuicao_vet -> expression VIRGULA atribuicao_vet','atribuicao_vet',3,'p_atribuicao_vet','analisador_sintatico.py',157),
  ('atribuicao_vet -> expression','atribuicao_vet',1,'p_atribuicao_vet','analisador_sintatico.py',158),
  ('atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE VIRGULA atribuicao_mat','atribuicao_mat',5,'p_atribuicao_mat','analisador_sintatico.py',167),
  ('atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE','atribuicao_mat',3,'p_atribuicao_mat','analisador_sintatico.py',168),
  ('equacao -> pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm','equacao',9,'p_equacao','analisador_sintatico.py',177),
  ('equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm','equacao',13,'p_equacao','analisador_sintatico.py',178),
  ('equacao -> pointer ID ATRIBUICAO expression PONTO_VIRGULA stm','equacao',6,'p_equacao','analisador_sintatico.py',179),
  ('arg -> expression','arg',1,'p_arg','analisador_sintatico.py',190),
  ('arg -> lambda','arg',1,'p_arg','analisador_sintatico.py',191),
  ('more_arg -> more_arg L_COCHETE arg R_COCHETE','more_arg',4,'p_more_arg','analisador_sintatico.py',197),
  ('more_arg -> lambda','more_arg',1,'p_more_arg','analisador_sintatico.py',198),
  ('mostrar -> mostrar1','mostrar',1,'p_mostrar','analisador_sintatico.py',207),
  ('mostrar -> mostrar2','mostrar',1,'p_mostrar','analisador_sintatico.py',208),
  ('mostrar1 -> PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm','mostrar1',6,'p_mostrar1','analisador_sintatico.py',214),
  ('mostrar2 -> PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm','mostrar2',6,'p_mostrar2','analisador_sintatico.py',218),
  ('expression_mostrar -> CONST_STRING VIRGULA expression expression_mostrar','expression_mostrar',4,'p_expression_mostrar','analisador_sintatico.py',223),
  ('expression_mostrar -> VIRGULA expression','expression_mostrar',2,'p_expression_mostrar','analisador_sintatico.py',224),
  ('expression_mostrar -> lambda','expression_mostrar',1,'p_expression_mostrar','analisador_sintatico.py',225),
  ('entrada -> SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm','entrada',6,'p_entrada','analisador_sintatico.py',236),
  ('expression_entrada -> CONST_STRING VIRGULA E_COMERCIAL ID expression_entrada','expression_entrada',5,'p_expression_entrada','analisador_sintatico.py',243),
  ('expression_entrada -> VIRGULA E_COMERCIAL ID expression_entrada','expression_entrada',4,'p_expression_entrada','analisador_sintatico.py',244),
  ('expression_entrada -> lambda','expression_entrada',1,'p_expression_entrada','analisador_sintatico.py',245),
  ('exp_and -> exp AND exp','exp_and',3,'p_exp_and','analisador_sintatico.py',255),
  ('exp_ou -> exp OU exp','exp_ou',3,'p_exp_ou','analisador_sintatico.py',259),
  ('exp_menor -> exp MENOR exp','exp_menor',3,'p_exp_menor','analisador_sintatico.py',263),
  ('exp_maior -> exp MAIOR exp','exp_maior',3,'p_exp_maior','analisador_sintatico.py',267),
  ('exp_menor_igual -> exp MENOR_IGUAL exp','exp_menor_igual',3,'p_exp_menor_igual','analisador_sintatico.py',271),
  ('exp_maior_igual -> exp MAIOR_IGUAL exp','exp_maior_igual',3,'p_exp_maior_igual','analisador_sintatico.py',275),
  ('exp_igual -> exp IGUAL exp','exp_igual',3,'p_exp_igual','analisador_sintatico.py',279),
  ('exp_diferente -> exp DIFERENTE exp','exp_diferente',3,'p_exp_diferente','analisador_sintatico.py',283),
  ('exp_menos -> exp MENOS exp','exp_menos',3,'p_exp_menos','analisador_sintatico.py',287),
  ('exp_mais -> exp MAIS exp','exp_mais',3,'p_exp_mais','analisador_sintatico.py',291),
  ('exp_asterisco -> exp ASTERISCO exp','exp_asterisco',3,'p_exp_asterisco','analisador_sintatico.py',295),
  ('exp_barra -> exp BARRA exp','exp_barra',3,'p_exp_barra','analisador_sintatico.py',299),
  ('exp_mod -> exp MOD exp','exp_mod',3,'p_exp_mod','analisador_sintatico.py',303),
  ('menos_exp -> MENOS exp','menos_exp',2,'p_menos_exp','analisador_sintatico.py',307),
  ('mais_exp -> MAIS exp','mais_exp',2,'p_mais_exp','analisador_sintatico.py',311),
  ('asterisco_exp -> ASTERISCO exp','asterisco_exp',2,'p_asterisco_exp','analisador_sintatico.py',315),
  ('negacao_exp -> NEGACAO exp','negacao_exp',2,'p_negacao_exp','analisador_sintatico.py',319),
  ('e_comercial_exp -> E_COMERCIAL exp','e_comercial_exp',2,'p_e_comercial_exp','analisador_sintatico.py',323),
  ('const_virgula -> VIRGULA','const_virgula',1,'p_const_virgula','analisador_sintatico.py',327),
  ('const_ponto -> PONTO','const_ponto',1,'p_const_ponto','analisador_sintatico.py',331),
  ('const_numero_real -> NUMERO_REAL','const_numero_real',1,'p_const_numero_real','analisador_sintatico.py',335),
  ('const_numero_int -> NUMERO_INT','const_numero_int',1,'p_const_numero_int','analisador_sintatico.py',339),
  ('const_char -> CONST_CHAR','const_char',1,'p_const_char','analisador_sintatico.py',343),
  ('const_string -> CONST_STRING','const_string',1,'p_const_string','analisador_sintatico.py',347),
  ('mais_mais -> MAIS_MAIS','mais_mais',1,'p_mais_mais','analisador_sintatico.py',351),
  ('menos_menos -> MENOS_MENOS','menos_menos',1,'p_menos_menos','analisador_sintatico.py',355),
  ('id -> ID','id',1,'p_id','analisador_sintatico.py',359),
  ('true -> TRUE','true',1,'p_true','analisador_sintatico.py',363),
  ('false -> FALSE','false',1,'p_false','analisador_sintatico.py',367),
  ('id_atribuicao_exp -> ID ATRIBUICAO exp','id_atribuicao_exp',3,'p_id_atribuicao_exp','analisador_sintatico.py',371),
  ('id_cochete_exp -> ID L_COCHETE exp R_COCHETE','id_cochete_exp',4,'p_id_cochete_exp','analisador_sintatico.py',375),
  ('parentese_exp -> L_PARENTESE exp R_PARENTESE','parentese_exp',3,'p_parentese_exp','analisador_sintatico.py',379),
  ('chave_exp -> L_CHAVE exp R_CHAVE','chave_exp',3,'p_chave_exp','analisador_sintatico.py',383),
  ('exp -> exp_and','exp',1,'p_exp','analisador_sintatico.py',388),
  ('exp -> exp_ou','exp',1,'p_exp','analisador_sintatico.py',389),
  ('exp -> exp_menor','exp',1,'p_exp','analisador_sintatico.py',390),
  ('exp -> exp_maior','exp',1,'p_exp','analisador_sintatico.py',391),
  ('exp -> exp_menor_igual','exp',1,'p_exp','analisador_sintatico.py',392),
  ('exp -> exp_maior_igual','exp',1,'p_exp','analisador_sintatico.py',393),
  ('exp -> exp_igual','exp',1,'p_exp','analisador_sintatico.py',394),
  ('exp -> exp_diferente','exp',1,'p_exp','analisador_sintatico.py',395),
  ('exp -> exp_menos','exp',1,'p_exp','analisador_sintatico.py',396),
  ('exp -> exp_mais','exp',1,'p_exp','analisador_sintatico.py',397),
  ('exp -> exp_asterisco','exp',1,'p_exp','analisador_sintatico.py',398),
  ('exp -> exp_barra','exp',1,'p_exp','analisador_sintatico.py',399),
  ('exp -> exp_mod','exp',1,'p_exp','analisador_sintatico.py',400),
  ('exp -> menos_exp','exp',1,'p_exp','analisador_sintatico.py',401),
  ('exp -> mais_exp','exp',1,'p_exp','analisador_sintatico.py',402),
  ('exp -> asterisco_exp','exp',1,'p_exp','analisador_sintatico.py',403),
  ('exp -> negacao_exp','exp',1,'p_exp','analisador_sintatico.py',404),
  ('exp -> e_comercial_exp','exp',1,'p_exp','analisador_sintatico.py',405),
  ('exp -> const_virgula','exp',1,'p_exp','analisador_sintatico.py',406),
  ('exp -> const_ponto','exp',1,'p_exp','analisador_sintatico.py',407),
  ('exp -> const_numero_real','exp',1,'p_exp','analisador_sintatico.py',408),
  ('exp -> const_numero_int','exp',1,'p_exp','analisador_sintatico.py',409),
  ('exp -> const_char','exp',1,'p_exp','analisador_sintatico.py',410),
  ('exp -> const_string','exp',1,'p_exp','analisador_sintatico.py',411),
  ('exp -> mais_mais','exp',1,'p_exp','analisador_sintatico.py',412),
  ('exp -> menos_menos','exp',1,'p_exp','analisador_sintatico.py',413),
  ('exp -> id','exp',1,'p_exp','analisador_sintatico.py',414),
  ('exp -> true','exp',1,'p_exp','analisador_sintatico.py',415),
  ('exp -> false','exp',1,'p_exp','analisador_sintatico.py',416),
  ('exp -> id_atribuicao_exp','exp',1,'p_exp','analisador_sintatico.py',417),
  ('exp -> id_cochete_exp','exp',1,'p_exp','analisador_sintatico.py',418),
  ('exp -> parentese_exp','exp',1,'p_exp','analisador_sintatico.py',419),
  ('exp -> chave_exp','exp',1,'p_exp','analisador_sintatico.py',420),
  ('expression -> exp','expression',1,'p_expression','analisador_sintatico.py',434),
  ('expression -> extras','expression',1,'p_expression','analisador_sintatico.py',435),
  ('expression -> aspa_dupla_exp','expression',1,'p_expression','analisador_sintatico.py',436),
  ('expression -> aspa_simples_exp','expression',1,'p_expression','analisador_sintatico.py',437),
  ('aspa_dupla_exp -> ASPA_DUPLA exp ASPA_DUPLA','aspa_dupla_exp',3,'p_aspa_dupla_exp','analisador_sintatico.py',446),
  ('aspa_simples_exp -> ASPA_SIMPLES exp ASPA_SIMPLES','aspa_simples_exp',3,'p_aspa_simples_exp','analisador_sintatico.py',450),
  ('extras -> L_PARENTESE tipo R_PARENTESE exp','extras',4,'p_extras','analisador_sintatico.py',455),
  ('condicional -> IF L_PARENTESE expression R_PARENTESE stm','condicional',5,'p_condicional','analisador_sintatico.py',462),
  ('condicional -> IF L_PARENTESE expression R_PARENTESE stm ELSE stm','condicional',7,'p_condicional','analisador_sintatico.py',463),
  ('estrutura_repeticao -> for','estrutura_repeticao',1,'p_estrutura_repeticao','analisador_sintatico.py',472),
  ('estrutura_repeticao -> while','estrutura_repeticao',1,'p_estrutura_repeticao','analisador_sintatico.py',473),
  ('estrutura_repeticao -> do_while','estrutura_repeticao',1,'p_estrutura_repeticao','analisador_sintatico.py',474),
  ('for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm','for',13,'p_for','analisador_sintatico.py',481),
  ('for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm','for',10,'p_for','analisador_sintatico.py',482),
  ('while -> WHILE L_PARENTESE expression R_PARENTESE bloco stm','while',6,'p_while','analisador_sintatico.py',491),
  ('do_while -> DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm','do_while',8,'p_do_while','analisador_sintatico.py',498),
]
