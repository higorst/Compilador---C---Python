Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> main
Rule 1     main -> INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVE
Rule 2     stm -> declaracao
Rule 3     stm -> equacao
Rule 4     stm -> condicional
Rule 5     stm -> estrutura_repeticao
Rule 6     stm -> mostrar
Rule 7     stm -> entrada
Rule 8     stm -> break
Rule 9     stm -> continue
Rule 10    stm -> bloco_stm
Rule 11    stm -> lambda
Rule 12    bloco_stm -> bloco stm
Rule 13    lambda -> <empty>
Rule 14    break -> BREAK PONTO_VIRGULA stm
Rule 15    continue -> CONTINUE PONTO_VIRGULA stm
Rule 16    tipo -> tipo_VOID
Rule 17    tipo -> tipo_BOOLEAN
Rule 18    tipo -> tipo_CHAR
Rule 19    tipo -> tipo_INT
Rule 20    tipo -> tipo_FLOAT
Rule 21    tipo_VOID -> VOID
Rule 22    tipo_BOOLEAN -> BOOLEAN
Rule 23    tipo_CHAR -> CHAR
Rule 24    tipo_INT -> INT
Rule 25    tipo_FLOAT -> FLOAT
Rule 26    bloco -> L_CHAVE stm R_CHAVE
Rule 27    pointer -> pointer ASTERISCO
Rule 28    pointer -> lambda
Rule 29    declaracao -> tipo pointer ID PONTO_VIRGULA stm
Rule 30    declaracao -> tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
Rule 31    declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
Rule 32    declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
Rule 33    declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
Rule 34    declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
Rule 35    atribuicao_vet -> expression VIRGULA atribuicao_vet
Rule 36    atribuicao_vet -> expression
Rule 37    atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE VIRGULA atribuicao_mat
Rule 38    atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE
Rule 39    equacao -> pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
Rule 40    equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
Rule 41    equacao -> pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
Rule 42    arg -> expression
Rule 43    arg -> lambda
Rule 44    more_arg -> more_arg L_COCHETE arg R_COCHETE
Rule 45    more_arg -> lambda
Rule 46    mostrar -> mostrar1
Rule 47    mostrar -> mostrar2
Rule 48    mostrar1 -> PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
Rule 49    mostrar2 -> PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
Rule 50    expression_mostrar -> CONST_STRING VIRGULA expression expression_mostrar
Rule 51    expression_mostrar -> VIRGULA expression
Rule 52    expression_mostrar -> lambda
Rule 53    entrada -> SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
Rule 54    expression_entrada -> CONST_STRING VIRGULA E_COMERCIAL ID expression_entrada
Rule 55    expression_entrada -> VIRGULA E_COMERCIAL ID expression_entrada
Rule 56    expression_entrada -> lambda
Rule 57    exp_and -> exp AND exp
Rule 58    exp_ou -> exp OU exp
Rule 59    exp_menor -> exp MENOR exp
Rule 60    exp_maior -> exp MAIOR exp
Rule 61    exp_menor_igual -> exp MENOR_IGUAL exp
Rule 62    exp_maior_igual -> exp MAIOR_IGUAL exp
Rule 63    exp_igual -> exp IGUAL exp
Rule 64    exp_diferente -> exp DIFERENTE exp
Rule 65    exp_menos -> exp MENOS exp
Rule 66    exp_mais -> exp MAIS exp
Rule 67    exp_asterisco -> exp ASTERISCO exp
Rule 68    exp_barra -> exp BARRA exp
Rule 69    exp_mod -> exp MOD exp
Rule 70    menos_exp -> MENOS exp
Rule 71    mais_exp -> MAIS exp
Rule 72    asterisco_exp -> ASTERISCO exp
Rule 73    negacao_exp -> NEGACAO exp
Rule 74    e_comercial_exp -> E_COMERCIAL exp
Rule 75    const_virgula -> VIRGULA
Rule 76    const_ponto -> PONTO
Rule 77    const_numero_real -> NUMERO_REAL
Rule 78    const_numero_int -> NUMERO_INT
Rule 79    const_char -> CONST_CHAR
Rule 80    const_string -> CONST_STRING
Rule 81    mais_mais -> MAIS_MAIS
Rule 82    menos_menos -> MENOS_MENOS
Rule 83    id -> ID
Rule 84    true -> TRUE
Rule 85    false -> FALSE
Rule 86    id_atribuicao_exp -> ID ATRIBUICAO exp
Rule 87    id_cochete_exp -> ID L_COCHETE exp R_COCHETE
Rule 88    parentese_exp -> L_PARENTESE exp R_PARENTESE
Rule 89    chave_exp -> L_CHAVE exp R_CHAVE
Rule 90    exp -> exp_and
Rule 91    exp -> exp_ou
Rule 92    exp -> exp_menor
Rule 93    exp -> exp_maior
Rule 94    exp -> exp_menor_igual
Rule 95    exp -> exp_maior_igual
Rule 96    exp -> exp_igual
Rule 97    exp -> exp_diferente
Rule 98    exp -> exp_menos
Rule 99    exp -> exp_mais
Rule 100   exp -> exp_asterisco
Rule 101   exp -> exp_barra
Rule 102   exp -> exp_mod
Rule 103   exp -> menos_exp
Rule 104   exp -> mais_exp
Rule 105   exp -> asterisco_exp
Rule 106   exp -> negacao_exp
Rule 107   exp -> e_comercial_exp
Rule 108   exp -> const_virgula
Rule 109   exp -> const_ponto
Rule 110   exp -> const_numero_real
Rule 111   exp -> const_numero_int
Rule 112   exp -> const_char
Rule 113   exp -> const_string
Rule 114   exp -> mais_mais
Rule 115   exp -> menos_menos
Rule 116   exp -> id
Rule 117   exp -> true
Rule 118   exp -> false
Rule 119   exp -> id_atribuicao_exp
Rule 120   exp -> id_cochete_exp
Rule 121   exp -> parentese_exp
Rule 122   exp -> chave_exp
Rule 123   expression -> exp
Rule 124   expression -> extras
Rule 125   expression -> aspa_dupla_exp
Rule 126   expression -> aspa_simples_exp
Rule 127   aspa_dupla_exp -> ASPA_DUPLA exp ASPA_DUPLA
Rule 128   aspa_simples_exp -> ASPA_SIMPLES exp ASPA_SIMPLES
Rule 129   extras -> L_PARENTESE tipo R_PARENTESE exp
Rule 130   condicional -> IF L_PARENTESE expression R_PARENTESE stm
Rule 131   condicional -> IF L_PARENTESE expression R_PARENTESE stm ELSE stm
Rule 132   estrutura_repeticao -> for
Rule 133   estrutura_repeticao -> while
Rule 134   estrutura_repeticao -> do_while
Rule 135   for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
Rule 136   for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
Rule 137   while -> WHILE L_PARENTESE expression R_PARENTESE bloco stm
Rule 138   do_while -> DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm

Terminals, with rules where they appear

AND                  : 57
ASPA_DUPLA           : 127 127
ASPA_SIMPLES         : 128 128
ASTERISCO            : 27 67 72
ATRIBUICAO           : 30 32 34 39 40 41 86 135
BARRA                : 68
BOOLEAN              : 22
BREAK                : 14
CHAR                 : 23
CONST_CHAR           : 79
CONST_STRING         : 48 50 54 80
CONTINUE             : 15
DIFERENTE            : 64
DO                   : 138
ELSE                 : 131
E_COMERCIAL          : 54 55 74
FALSE                : 85
FLOAT                : 25
FOR                  : 135 136
ID                   : 29 30 31 32 33 34 39 40 41 54 55 83 86 87 135
IF                   : 130 131
IGUAL                : 63
INT                  : 1 24
L_CHAVE              : 1 26 34 37 38 89
L_COCHETE            : 31 32 33 33 34 34 39 40 40 44 87
L_PARENTESE          : 1 48 49 53 88 129 130 131 135 136 137 138
MAIN                 : 1
MAIOR                : 60
MAIOR_IGUAL          : 62
MAIS                 : 66 71
MAIS_MAIS            : 81
MENOR                : 59
MENOR_IGUAL          : 61
MENOS                : 65 70
MENOS_MENOS          : 82
MOD                  : 69
NEGACAO              : 73
NUMERO_INT           : 78
NUMERO_REAL          : 77
OU                   : 58
PONTO                : 76
PONTO_VIRGULA        : 1 14 15 29 30 31 32 33 34 39 40 41 48 49 53 135 135 136 136 138
PRINTF               : 48 49
RETURN               : 1
R_CHAVE              : 1 26 34 37 38 89
R_COCHETE            : 31 32 33 33 34 34 39 40 40 44 87
R_PARENTESE          : 1 48 49 53 88 129 130 131 135 136 137 138
SCANF                : 53
TRUE                 : 84
VIRGULA              : 35 37 50 51 54 55 75
VOID                 : 21
WHILE                : 137 138
error                : 

Nonterminals, with rules where they appear

arg                  : 31 32 33 33 34 34 39 40 40 44 135 135 136 136 136
aspa_dupla_exp       : 125
aspa_simples_exp     : 126
asterisco_exp        : 105
atribuicao_mat       : 32 34 37
atribuicao_vet       : 35 37 38
bloco                : 12 135 136 137 138
bloco_stm            : 10
break                : 8
chave_exp            : 122
condicional          : 4
const_char           : 112
const_numero_int     : 111
const_numero_real    : 110
const_ponto          : 109
const_string         : 113
const_virgula        : 108
continue             : 9
declaracao           : 2
do_while             : 134
e_comercial_exp      : 107
entrada              : 7
equacao              : 3
estrutura_repeticao  : 5
exp                  : 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 71 72 73 74 86 87 88 89 123 127 128 129
exp_and              : 90
exp_asterisco        : 100
exp_barra            : 101
exp_diferente        : 97
exp_igual            : 96
exp_maior            : 93
exp_maior_igual      : 95
exp_mais             : 99
exp_menor            : 92
exp_menor_igual      : 94
exp_menos            : 98
exp_mod              : 102
exp_ou               : 91
expression           : 1 30 35 36 39 40 41 42 50 51 130 131 135 137 138
expression_entrada   : 53 54 55
expression_mostrar   : 49 50
extras               : 124
false                : 118
for                  : 132
id                   : 116
id_atribuicao_exp    : 119
id_cochete_exp       : 120
lambda               : 11 28 43 45 52 56
main                 : 0
mais_exp             : 104
mais_mais            : 114
menos_exp            : 103
menos_menos          : 115
more_arg             : 33 34 40 44
mostrar              : 6
mostrar1             : 46
mostrar2             : 47
negacao_exp          : 106
parentese_exp        : 121
pointer              : 27 29 30 31 32 33 34 39 40 41
stm                  : 1 12 14 15 26 29 30 31 32 33 34 39 40 41 48 49 53 130 131 131 135 136 137 138
tipo                 : 29 30 31 32 33 34 129 135
tipo_BOOLEAN         : 17
tipo_CHAR            : 18
tipo_FLOAT           : 20
tipo_INT             : 19
tipo_VOID            : 16
true                 : 117
while                : 133

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVE

    INT             shift and go to state 2

    main                           shift and go to state 1

state 1

    (0) S' -> main .



state 2

    (1) main -> INT . MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVE

    MAIN            shift and go to state 3


state 3

    (1) main -> INT MAIN . L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVE

    L_PARENTESE     shift and go to state 4


state 4

    (1) main -> INT MAIN L_PARENTESE . R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVE

    R_PARENTESE     shift and go to state 5


state 5

    (1) main -> INT MAIN L_PARENTESE R_PARENTESE . L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVE

    L_CHAVE         shift and go to state 6


state 6

    (1) main -> INT MAIN L_PARENTESE R_PARENTESE L_CHAVE . stm RETURN expression PONTO_VIRGULA R_CHAVE
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    stm                            shift and go to state 9
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 7

    (24) tipo_INT -> INT .

    ID              reduce using rule 24 (tipo_INT -> INT .)
    ASTERISCO       reduce using rule 24 (tipo_INT -> INT .)
    R_PARENTESE     reduce using rule 24 (tipo_INT -> INT .)


state 8

    (26) bloco -> L_CHAVE . stm R_CHAVE
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    stm                            shift and go to state 45
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 9

    (1) main -> INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm . RETURN expression PONTO_VIRGULA R_CHAVE

    RETURN          shift and go to state 46


state 10

    (2) stm -> declaracao .

    RETURN          reduce using rule 2 (stm -> declaracao .)
    R_CHAVE         reduce using rule 2 (stm -> declaracao .)
    ELSE            reduce using rule 2 (stm -> declaracao .)


state 11

    (3) stm -> equacao .

    RETURN          reduce using rule 3 (stm -> equacao .)
    R_CHAVE         reduce using rule 3 (stm -> equacao .)
    ELSE            reduce using rule 3 (stm -> equacao .)


state 12

    (4) stm -> condicional .

    RETURN          reduce using rule 4 (stm -> condicional .)
    R_CHAVE         reduce using rule 4 (stm -> condicional .)
    ELSE            reduce using rule 4 (stm -> condicional .)


state 13

    (5) stm -> estrutura_repeticao .

    RETURN          reduce using rule 5 (stm -> estrutura_repeticao .)
    R_CHAVE         reduce using rule 5 (stm -> estrutura_repeticao .)
    ELSE            reduce using rule 5 (stm -> estrutura_repeticao .)


state 14

    (6) stm -> mostrar .

    RETURN          reduce using rule 6 (stm -> mostrar .)
    R_CHAVE         reduce using rule 6 (stm -> mostrar .)
    ELSE            reduce using rule 6 (stm -> mostrar .)


state 15

    (7) stm -> entrada .

    RETURN          reduce using rule 7 (stm -> entrada .)
    R_CHAVE         reduce using rule 7 (stm -> entrada .)
    ELSE            reduce using rule 7 (stm -> entrada .)


state 16

    (8) stm -> break .

    RETURN          reduce using rule 8 (stm -> break .)
    R_CHAVE         reduce using rule 8 (stm -> break .)
    ELSE            reduce using rule 8 (stm -> break .)


state 17

    (9) stm -> continue .

    RETURN          reduce using rule 9 (stm -> continue .)
    R_CHAVE         reduce using rule 9 (stm -> continue .)
    ELSE            reduce using rule 9 (stm -> continue .)


state 18

    (10) stm -> bloco_stm .

    RETURN          reduce using rule 10 (stm -> bloco_stm .)
    R_CHAVE         reduce using rule 10 (stm -> bloco_stm .)
    ELSE            reduce using rule 10 (stm -> bloco_stm .)


state 19

    (11) stm -> lambda .
    (28) pointer -> lambda .

    RETURN          reduce using rule 11 (stm -> lambda .)
    R_CHAVE         reduce using rule 11 (stm -> lambda .)
    ELSE            reduce using rule 11 (stm -> lambda .)
    ID              reduce using rule 28 (pointer -> lambda .)
    ASTERISCO       reduce using rule 28 (pointer -> lambda .)


state 20

    (29) declaracao -> tipo . pointer ID PONTO_VIRGULA stm
    (30) declaracao -> tipo . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> tipo . pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> tipo . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> tipo . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> tipo . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (13) lambda -> .

    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)

    pointer                        shift and go to state 47
    lambda                         shift and go to state 48

state 21

    (39) equacao -> pointer . ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> pointer . ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> pointer . ID ATRIBUICAO expression PONTO_VIRGULA stm
    (27) pointer -> pointer . ASTERISCO

    ID              shift and go to state 49
    ASTERISCO       shift and go to state 50


state 22

    (130) condicional -> IF . L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> IF . L_PARENTESE expression R_PARENTESE stm ELSE stm

    L_PARENTESE     shift and go to state 51


state 23

    (132) estrutura_repeticao -> for .

    RETURN          reduce using rule 132 (estrutura_repeticao -> for .)
    R_CHAVE         reduce using rule 132 (estrutura_repeticao -> for .)
    ELSE            reduce using rule 132 (estrutura_repeticao -> for .)


state 24

    (133) estrutura_repeticao -> while .

    RETURN          reduce using rule 133 (estrutura_repeticao -> while .)
    R_CHAVE         reduce using rule 133 (estrutura_repeticao -> while .)
    ELSE            reduce using rule 133 (estrutura_repeticao -> while .)


state 25

    (134) estrutura_repeticao -> do_while .

    RETURN          reduce using rule 134 (estrutura_repeticao -> do_while .)
    R_CHAVE         reduce using rule 134 (estrutura_repeticao -> do_while .)
    ELSE            reduce using rule 134 (estrutura_repeticao -> do_while .)


state 26

    (46) mostrar -> mostrar1 .

    RETURN          reduce using rule 46 (mostrar -> mostrar1 .)
    R_CHAVE         reduce using rule 46 (mostrar -> mostrar1 .)
    ELSE            reduce using rule 46 (mostrar -> mostrar1 .)


state 27

    (47) mostrar -> mostrar2 .

    RETURN          reduce using rule 47 (mostrar -> mostrar2 .)
    R_CHAVE         reduce using rule 47 (mostrar -> mostrar2 .)
    ELSE            reduce using rule 47 (mostrar -> mostrar2 .)


state 28

    (53) entrada -> SCANF . L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm

    L_PARENTESE     shift and go to state 52


state 29

    (14) break -> BREAK . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 53


state 30

    (15) continue -> CONTINUE . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 54


state 31

    (12) bloco_stm -> bloco . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    bloco                          shift and go to state 31
    stm                            shift and go to state 55
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 32

    (16) tipo -> tipo_VOID .

    ID              reduce using rule 16 (tipo -> tipo_VOID .)
    ASTERISCO       reduce using rule 16 (tipo -> tipo_VOID .)
    R_PARENTESE     reduce using rule 16 (tipo -> tipo_VOID .)


state 33

    (17) tipo -> tipo_BOOLEAN .

    ID              reduce using rule 17 (tipo -> tipo_BOOLEAN .)
    ASTERISCO       reduce using rule 17 (tipo -> tipo_BOOLEAN .)
    R_PARENTESE     reduce using rule 17 (tipo -> tipo_BOOLEAN .)


state 34

    (18) tipo -> tipo_CHAR .

    ID              reduce using rule 18 (tipo -> tipo_CHAR .)
    ASTERISCO       reduce using rule 18 (tipo -> tipo_CHAR .)
    R_PARENTESE     reduce using rule 18 (tipo -> tipo_CHAR .)


state 35

    (19) tipo -> tipo_INT .

    ID              reduce using rule 19 (tipo -> tipo_INT .)
    ASTERISCO       reduce using rule 19 (tipo -> tipo_INT .)
    R_PARENTESE     reduce using rule 19 (tipo -> tipo_INT .)


state 36

    (20) tipo -> tipo_FLOAT .

    ID              reduce using rule 20 (tipo -> tipo_FLOAT .)
    ASTERISCO       reduce using rule 20 (tipo -> tipo_FLOAT .)
    R_PARENTESE     reduce using rule 20 (tipo -> tipo_FLOAT .)


state 37

    (135) for -> FOR . L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> FOR . L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm

    L_PARENTESE     shift and go to state 56


state 38

    (137) while -> WHILE . L_PARENTESE expression R_PARENTESE bloco stm

    L_PARENTESE     shift and go to state 57


state 39

    (138) do_while -> DO . bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE

    L_CHAVE         shift and go to state 8

    bloco                          shift and go to state 58

state 40

    (48) mostrar1 -> PRINTF . L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> PRINTF . L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm

    L_PARENTESE     shift and go to state 59


state 41

    (21) tipo_VOID -> VOID .

    ID              reduce using rule 21 (tipo_VOID -> VOID .)
    ASTERISCO       reduce using rule 21 (tipo_VOID -> VOID .)
    R_PARENTESE     reduce using rule 21 (tipo_VOID -> VOID .)


state 42

    (22) tipo_BOOLEAN -> BOOLEAN .

    ID              reduce using rule 22 (tipo_BOOLEAN -> BOOLEAN .)
    ASTERISCO       reduce using rule 22 (tipo_BOOLEAN -> BOOLEAN .)
    R_PARENTESE     reduce using rule 22 (tipo_BOOLEAN -> BOOLEAN .)


state 43

    (23) tipo_CHAR -> CHAR .

    ID              reduce using rule 23 (tipo_CHAR -> CHAR .)
    ASTERISCO       reduce using rule 23 (tipo_CHAR -> CHAR .)
    R_PARENTESE     reduce using rule 23 (tipo_CHAR -> CHAR .)


state 44

    (25) tipo_FLOAT -> FLOAT .

    ID              reduce using rule 25 (tipo_FLOAT -> FLOAT .)
    ASTERISCO       reduce using rule 25 (tipo_FLOAT -> FLOAT .)
    R_PARENTESE     reduce using rule 25 (tipo_FLOAT -> FLOAT .)


state 45

    (26) bloco -> L_CHAVE stm . R_CHAVE

    R_CHAVE         shift and go to state 60


state 46

    (1) main -> INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN . expression PONTO_VIRGULA R_CHAVE
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 63
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 47

    (29) declaracao -> tipo pointer . ID PONTO_VIRGULA stm
    (30) declaracao -> tipo pointer . ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> tipo pointer . ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> tipo pointer . ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> tipo pointer . ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> tipo pointer . ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (27) pointer -> pointer . ASTERISCO

    ID              shift and go to state 119
    ASTERISCO       shift and go to state 50


state 48

    (28) pointer -> lambda .

    ID              reduce using rule 28 (pointer -> lambda .)
    ASTERISCO       reduce using rule 28 (pointer -> lambda .)


state 49

    (39) equacao -> pointer ID . L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> pointer ID . L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> pointer ID . ATRIBUICAO expression PONTO_VIRGULA stm

    L_COCHETE       shift and go to state 120
    ATRIBUICAO      shift and go to state 121


state 50

    (27) pointer -> pointer ASTERISCO .

    ID              reduce using rule 27 (pointer -> pointer ASTERISCO .)
    ASTERISCO       reduce using rule 27 (pointer -> pointer ASTERISCO .)


state 51

    (130) condicional -> IF L_PARENTESE . expression R_PARENTESE stm
    (131) condicional -> IF L_PARENTESE . expression R_PARENTESE stm ELSE stm
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 122
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 52

    (53) entrada -> SCANF L_PARENTESE . expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (54) expression_entrada -> . CONST_STRING VIRGULA E_COMERCIAL ID expression_entrada
    (55) expression_entrada -> . VIRGULA E_COMERCIAL ID expression_entrada
    (56) expression_entrada -> . lambda
    (13) lambda -> .

    CONST_STRING    shift and go to state 124
    VIRGULA         shift and go to state 125
    R_PARENTESE     reduce using rule 13 (lambda -> .)

    expression_entrada             shift and go to state 123
    lambda                         shift and go to state 126

state 53

    (14) break -> BREAK PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    stm                            shift and go to state 127
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 54

    (15) continue -> CONTINUE PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    stm                            shift and go to state 128
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 55

    (12) bloco_stm -> bloco stm .

    RETURN          reduce using rule 12 (bloco_stm -> bloco stm .)
    R_CHAVE         reduce using rule 12 (bloco_stm -> bloco stm .)
    ELSE            reduce using rule 12 (bloco_stm -> bloco stm .)


state 56

    (135) for -> FOR L_PARENTESE . tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> FOR L_PARENTESE . arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (42) arg -> . expression
    (43) arg -> . lambda
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44
    PONTO_VIRGULA   reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    tipo                           shift and go to state 129
    expression                     shift and go to state 130
    arg                            shift and go to state 131
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 57

    (137) while -> WHILE L_PARENTESE . expression R_PARENTESE bloco stm
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 133
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 58

    (138) do_while -> DO bloco . WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm

    WHILE           shift and go to state 134


state 59

    (48) mostrar1 -> PRINTF L_PARENTESE . CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> PRINTF L_PARENTESE . expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (50) expression_mostrar -> . CONST_STRING VIRGULA expression expression_mostrar
    (51) expression_mostrar -> . VIRGULA expression
    (52) expression_mostrar -> . lambda
    (13) lambda -> .

    CONST_STRING    shift and go to state 135
    VIRGULA         shift and go to state 137
    R_PARENTESE     reduce using rule 13 (lambda -> .)

    expression_mostrar             shift and go to state 136
    lambda                         shift and go to state 138

state 60

    (26) bloco -> L_CHAVE stm R_CHAVE .

    IF              reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    SCANF           reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    BREAK           reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    CONTINUE        reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    FOR             reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    WHILE           reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    DO              reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    PRINTF          reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    L_CHAVE         reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    VOID            reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    BOOLEAN         reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    CHAR            reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    INT             reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    FLOAT           reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    ID              reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    ASTERISCO       reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    RETURN          reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    R_CHAVE         reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)
    ELSE            reduce using rule 26 (bloco -> L_CHAVE stm R_CHAVE .)


state 61

    (129) extras -> L_PARENTESE . tipo R_PARENTESE exp
    (88) parentese_exp -> L_PARENTESE . exp R_PARENTESE
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    tipo                           shift and go to state 140
    exp                            shift and go to state 141
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 62

    (89) chave_exp -> L_CHAVE . exp R_CHAVE
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 142
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 63

    (1) main -> INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression . PONTO_VIRGULA R_CHAVE

    PONTO_VIRGULA   shift and go to state 143


state 64

    (123) expression -> exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    PONTO_VIRGULA   reduce using rule 123 (expression -> exp .)
    R_PARENTESE     reduce using rule 123 (expression -> exp .)
    R_COCHETE       reduce using rule 123 (expression -> exp .)
    CONST_STRING    reduce using rule 123 (expression -> exp .)
    VIRGULA         reduce using rule 123 (expression -> exp .)
    R_CHAVE         reduce using rule 123 (expression -> exp .)
    AND             shift and go to state 144
    OU              shift and go to state 145
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156


state 65

    (124) expression -> extras .

    PONTO_VIRGULA   reduce using rule 124 (expression -> extras .)
    R_PARENTESE     reduce using rule 124 (expression -> extras .)
    R_COCHETE       reduce using rule 124 (expression -> extras .)
    CONST_STRING    reduce using rule 124 (expression -> extras .)
    VIRGULA         reduce using rule 124 (expression -> extras .)
    R_CHAVE         reduce using rule 124 (expression -> extras .)


state 66

    (125) expression -> aspa_dupla_exp .

    PONTO_VIRGULA   reduce using rule 125 (expression -> aspa_dupla_exp .)
    R_PARENTESE     reduce using rule 125 (expression -> aspa_dupla_exp .)
    R_COCHETE       reduce using rule 125 (expression -> aspa_dupla_exp .)
    CONST_STRING    reduce using rule 125 (expression -> aspa_dupla_exp .)
    VIRGULA         reduce using rule 125 (expression -> aspa_dupla_exp .)
    R_CHAVE         reduce using rule 125 (expression -> aspa_dupla_exp .)


state 67

    (126) expression -> aspa_simples_exp .

    PONTO_VIRGULA   reduce using rule 126 (expression -> aspa_simples_exp .)
    R_PARENTESE     reduce using rule 126 (expression -> aspa_simples_exp .)
    R_COCHETE       reduce using rule 126 (expression -> aspa_simples_exp .)
    CONST_STRING    reduce using rule 126 (expression -> aspa_simples_exp .)
    VIRGULA         reduce using rule 126 (expression -> aspa_simples_exp .)
    R_CHAVE         reduce using rule 126 (expression -> aspa_simples_exp .)


state 68

    (90) exp -> exp_and .

    AND             reduce using rule 90 (exp -> exp_and .)
    OU              reduce using rule 90 (exp -> exp_and .)
    MENOR           reduce using rule 90 (exp -> exp_and .)
    MAIOR           reduce using rule 90 (exp -> exp_and .)
    MENOR_IGUAL     reduce using rule 90 (exp -> exp_and .)
    MAIOR_IGUAL     reduce using rule 90 (exp -> exp_and .)
    IGUAL           reduce using rule 90 (exp -> exp_and .)
    DIFERENTE       reduce using rule 90 (exp -> exp_and .)
    MENOS           reduce using rule 90 (exp -> exp_and .)
    MAIS            reduce using rule 90 (exp -> exp_and .)
    ASTERISCO       reduce using rule 90 (exp -> exp_and .)
    BARRA           reduce using rule 90 (exp -> exp_and .)
    MOD             reduce using rule 90 (exp -> exp_and .)
    PONTO_VIRGULA   reduce using rule 90 (exp -> exp_and .)
    R_PARENTESE     reduce using rule 90 (exp -> exp_and .)
    R_CHAVE         reduce using rule 90 (exp -> exp_and .)
    ASPA_DUPLA      reduce using rule 90 (exp -> exp_and .)
    ASPA_SIMPLES    reduce using rule 90 (exp -> exp_and .)
    R_COCHETE       reduce using rule 90 (exp -> exp_and .)
    CONST_STRING    reduce using rule 90 (exp -> exp_and .)
    VIRGULA         reduce using rule 90 (exp -> exp_and .)


state 69

    (91) exp -> exp_ou .

    AND             reduce using rule 91 (exp -> exp_ou .)
    OU              reduce using rule 91 (exp -> exp_ou .)
    MENOR           reduce using rule 91 (exp -> exp_ou .)
    MAIOR           reduce using rule 91 (exp -> exp_ou .)
    MENOR_IGUAL     reduce using rule 91 (exp -> exp_ou .)
    MAIOR_IGUAL     reduce using rule 91 (exp -> exp_ou .)
    IGUAL           reduce using rule 91 (exp -> exp_ou .)
    DIFERENTE       reduce using rule 91 (exp -> exp_ou .)
    MENOS           reduce using rule 91 (exp -> exp_ou .)
    MAIS            reduce using rule 91 (exp -> exp_ou .)
    ASTERISCO       reduce using rule 91 (exp -> exp_ou .)
    BARRA           reduce using rule 91 (exp -> exp_ou .)
    MOD             reduce using rule 91 (exp -> exp_ou .)
    PONTO_VIRGULA   reduce using rule 91 (exp -> exp_ou .)
    R_PARENTESE     reduce using rule 91 (exp -> exp_ou .)
    R_CHAVE         reduce using rule 91 (exp -> exp_ou .)
    ASPA_DUPLA      reduce using rule 91 (exp -> exp_ou .)
    ASPA_SIMPLES    reduce using rule 91 (exp -> exp_ou .)
    R_COCHETE       reduce using rule 91 (exp -> exp_ou .)
    CONST_STRING    reduce using rule 91 (exp -> exp_ou .)
    VIRGULA         reduce using rule 91 (exp -> exp_ou .)


state 70

    (92) exp -> exp_menor .

    AND             reduce using rule 92 (exp -> exp_menor .)
    OU              reduce using rule 92 (exp -> exp_menor .)
    MENOR           reduce using rule 92 (exp -> exp_menor .)
    MAIOR           reduce using rule 92 (exp -> exp_menor .)
    MENOR_IGUAL     reduce using rule 92 (exp -> exp_menor .)
    MAIOR_IGUAL     reduce using rule 92 (exp -> exp_menor .)
    IGUAL           reduce using rule 92 (exp -> exp_menor .)
    DIFERENTE       reduce using rule 92 (exp -> exp_menor .)
    MENOS           reduce using rule 92 (exp -> exp_menor .)
    MAIS            reduce using rule 92 (exp -> exp_menor .)
    ASTERISCO       reduce using rule 92 (exp -> exp_menor .)
    BARRA           reduce using rule 92 (exp -> exp_menor .)
    MOD             reduce using rule 92 (exp -> exp_menor .)
    PONTO_VIRGULA   reduce using rule 92 (exp -> exp_menor .)
    R_PARENTESE     reduce using rule 92 (exp -> exp_menor .)
    R_CHAVE         reduce using rule 92 (exp -> exp_menor .)
    ASPA_DUPLA      reduce using rule 92 (exp -> exp_menor .)
    ASPA_SIMPLES    reduce using rule 92 (exp -> exp_menor .)
    R_COCHETE       reduce using rule 92 (exp -> exp_menor .)
    CONST_STRING    reduce using rule 92 (exp -> exp_menor .)
    VIRGULA         reduce using rule 92 (exp -> exp_menor .)


state 71

    (93) exp -> exp_maior .

    AND             reduce using rule 93 (exp -> exp_maior .)
    OU              reduce using rule 93 (exp -> exp_maior .)
    MENOR           reduce using rule 93 (exp -> exp_maior .)
    MAIOR           reduce using rule 93 (exp -> exp_maior .)
    MENOR_IGUAL     reduce using rule 93 (exp -> exp_maior .)
    MAIOR_IGUAL     reduce using rule 93 (exp -> exp_maior .)
    IGUAL           reduce using rule 93 (exp -> exp_maior .)
    DIFERENTE       reduce using rule 93 (exp -> exp_maior .)
    MENOS           reduce using rule 93 (exp -> exp_maior .)
    MAIS            reduce using rule 93 (exp -> exp_maior .)
    ASTERISCO       reduce using rule 93 (exp -> exp_maior .)
    BARRA           reduce using rule 93 (exp -> exp_maior .)
    MOD             reduce using rule 93 (exp -> exp_maior .)
    PONTO_VIRGULA   reduce using rule 93 (exp -> exp_maior .)
    R_PARENTESE     reduce using rule 93 (exp -> exp_maior .)
    R_CHAVE         reduce using rule 93 (exp -> exp_maior .)
    ASPA_DUPLA      reduce using rule 93 (exp -> exp_maior .)
    ASPA_SIMPLES    reduce using rule 93 (exp -> exp_maior .)
    R_COCHETE       reduce using rule 93 (exp -> exp_maior .)
    CONST_STRING    reduce using rule 93 (exp -> exp_maior .)
    VIRGULA         reduce using rule 93 (exp -> exp_maior .)


state 72

    (94) exp -> exp_menor_igual .

    AND             reduce using rule 94 (exp -> exp_menor_igual .)
    OU              reduce using rule 94 (exp -> exp_menor_igual .)
    MENOR           reduce using rule 94 (exp -> exp_menor_igual .)
    MAIOR           reduce using rule 94 (exp -> exp_menor_igual .)
    MENOR_IGUAL     reduce using rule 94 (exp -> exp_menor_igual .)
    MAIOR_IGUAL     reduce using rule 94 (exp -> exp_menor_igual .)
    IGUAL           reduce using rule 94 (exp -> exp_menor_igual .)
    DIFERENTE       reduce using rule 94 (exp -> exp_menor_igual .)
    MENOS           reduce using rule 94 (exp -> exp_menor_igual .)
    MAIS            reduce using rule 94 (exp -> exp_menor_igual .)
    ASTERISCO       reduce using rule 94 (exp -> exp_menor_igual .)
    BARRA           reduce using rule 94 (exp -> exp_menor_igual .)
    MOD             reduce using rule 94 (exp -> exp_menor_igual .)
    PONTO_VIRGULA   reduce using rule 94 (exp -> exp_menor_igual .)
    R_PARENTESE     reduce using rule 94 (exp -> exp_menor_igual .)
    R_CHAVE         reduce using rule 94 (exp -> exp_menor_igual .)
    ASPA_DUPLA      reduce using rule 94 (exp -> exp_menor_igual .)
    ASPA_SIMPLES    reduce using rule 94 (exp -> exp_menor_igual .)
    R_COCHETE       reduce using rule 94 (exp -> exp_menor_igual .)
    CONST_STRING    reduce using rule 94 (exp -> exp_menor_igual .)
    VIRGULA         reduce using rule 94 (exp -> exp_menor_igual .)


state 73

    (95) exp -> exp_maior_igual .

    AND             reduce using rule 95 (exp -> exp_maior_igual .)
    OU              reduce using rule 95 (exp -> exp_maior_igual .)
    MENOR           reduce using rule 95 (exp -> exp_maior_igual .)
    MAIOR           reduce using rule 95 (exp -> exp_maior_igual .)
    MENOR_IGUAL     reduce using rule 95 (exp -> exp_maior_igual .)
    MAIOR_IGUAL     reduce using rule 95 (exp -> exp_maior_igual .)
    IGUAL           reduce using rule 95 (exp -> exp_maior_igual .)
    DIFERENTE       reduce using rule 95 (exp -> exp_maior_igual .)
    MENOS           reduce using rule 95 (exp -> exp_maior_igual .)
    MAIS            reduce using rule 95 (exp -> exp_maior_igual .)
    ASTERISCO       reduce using rule 95 (exp -> exp_maior_igual .)
    BARRA           reduce using rule 95 (exp -> exp_maior_igual .)
    MOD             reduce using rule 95 (exp -> exp_maior_igual .)
    PONTO_VIRGULA   reduce using rule 95 (exp -> exp_maior_igual .)
    R_PARENTESE     reduce using rule 95 (exp -> exp_maior_igual .)
    R_CHAVE         reduce using rule 95 (exp -> exp_maior_igual .)
    ASPA_DUPLA      reduce using rule 95 (exp -> exp_maior_igual .)
    ASPA_SIMPLES    reduce using rule 95 (exp -> exp_maior_igual .)
    R_COCHETE       reduce using rule 95 (exp -> exp_maior_igual .)
    CONST_STRING    reduce using rule 95 (exp -> exp_maior_igual .)
    VIRGULA         reduce using rule 95 (exp -> exp_maior_igual .)


state 74

    (96) exp -> exp_igual .

    AND             reduce using rule 96 (exp -> exp_igual .)
    OU              reduce using rule 96 (exp -> exp_igual .)
    MENOR           reduce using rule 96 (exp -> exp_igual .)
    MAIOR           reduce using rule 96 (exp -> exp_igual .)
    MENOR_IGUAL     reduce using rule 96 (exp -> exp_igual .)
    MAIOR_IGUAL     reduce using rule 96 (exp -> exp_igual .)
    IGUAL           reduce using rule 96 (exp -> exp_igual .)
    DIFERENTE       reduce using rule 96 (exp -> exp_igual .)
    MENOS           reduce using rule 96 (exp -> exp_igual .)
    MAIS            reduce using rule 96 (exp -> exp_igual .)
    ASTERISCO       reduce using rule 96 (exp -> exp_igual .)
    BARRA           reduce using rule 96 (exp -> exp_igual .)
    MOD             reduce using rule 96 (exp -> exp_igual .)
    PONTO_VIRGULA   reduce using rule 96 (exp -> exp_igual .)
    R_PARENTESE     reduce using rule 96 (exp -> exp_igual .)
    R_CHAVE         reduce using rule 96 (exp -> exp_igual .)
    ASPA_DUPLA      reduce using rule 96 (exp -> exp_igual .)
    ASPA_SIMPLES    reduce using rule 96 (exp -> exp_igual .)
    R_COCHETE       reduce using rule 96 (exp -> exp_igual .)
    CONST_STRING    reduce using rule 96 (exp -> exp_igual .)
    VIRGULA         reduce using rule 96 (exp -> exp_igual .)


state 75

    (97) exp -> exp_diferente .

    AND             reduce using rule 97 (exp -> exp_diferente .)
    OU              reduce using rule 97 (exp -> exp_diferente .)
    MENOR           reduce using rule 97 (exp -> exp_diferente .)
    MAIOR           reduce using rule 97 (exp -> exp_diferente .)
    MENOR_IGUAL     reduce using rule 97 (exp -> exp_diferente .)
    MAIOR_IGUAL     reduce using rule 97 (exp -> exp_diferente .)
    IGUAL           reduce using rule 97 (exp -> exp_diferente .)
    DIFERENTE       reduce using rule 97 (exp -> exp_diferente .)
    MENOS           reduce using rule 97 (exp -> exp_diferente .)
    MAIS            reduce using rule 97 (exp -> exp_diferente .)
    ASTERISCO       reduce using rule 97 (exp -> exp_diferente .)
    BARRA           reduce using rule 97 (exp -> exp_diferente .)
    MOD             reduce using rule 97 (exp -> exp_diferente .)
    PONTO_VIRGULA   reduce using rule 97 (exp -> exp_diferente .)
    R_PARENTESE     reduce using rule 97 (exp -> exp_diferente .)
    R_CHAVE         reduce using rule 97 (exp -> exp_diferente .)
    ASPA_DUPLA      reduce using rule 97 (exp -> exp_diferente .)
    ASPA_SIMPLES    reduce using rule 97 (exp -> exp_diferente .)
    R_COCHETE       reduce using rule 97 (exp -> exp_diferente .)
    CONST_STRING    reduce using rule 97 (exp -> exp_diferente .)
    VIRGULA         reduce using rule 97 (exp -> exp_diferente .)


state 76

    (98) exp -> exp_menos .

    AND             reduce using rule 98 (exp -> exp_menos .)
    OU              reduce using rule 98 (exp -> exp_menos .)
    MENOR           reduce using rule 98 (exp -> exp_menos .)
    MAIOR           reduce using rule 98 (exp -> exp_menos .)
    MENOR_IGUAL     reduce using rule 98 (exp -> exp_menos .)
    MAIOR_IGUAL     reduce using rule 98 (exp -> exp_menos .)
    IGUAL           reduce using rule 98 (exp -> exp_menos .)
    DIFERENTE       reduce using rule 98 (exp -> exp_menos .)
    MENOS           reduce using rule 98 (exp -> exp_menos .)
    MAIS            reduce using rule 98 (exp -> exp_menos .)
    ASTERISCO       reduce using rule 98 (exp -> exp_menos .)
    BARRA           reduce using rule 98 (exp -> exp_menos .)
    MOD             reduce using rule 98 (exp -> exp_menos .)
    PONTO_VIRGULA   reduce using rule 98 (exp -> exp_menos .)
    R_PARENTESE     reduce using rule 98 (exp -> exp_menos .)
    R_CHAVE         reduce using rule 98 (exp -> exp_menos .)
    ASPA_DUPLA      reduce using rule 98 (exp -> exp_menos .)
    ASPA_SIMPLES    reduce using rule 98 (exp -> exp_menos .)
    R_COCHETE       reduce using rule 98 (exp -> exp_menos .)
    CONST_STRING    reduce using rule 98 (exp -> exp_menos .)
    VIRGULA         reduce using rule 98 (exp -> exp_menos .)


state 77

    (99) exp -> exp_mais .

    AND             reduce using rule 99 (exp -> exp_mais .)
    OU              reduce using rule 99 (exp -> exp_mais .)
    MENOR           reduce using rule 99 (exp -> exp_mais .)
    MAIOR           reduce using rule 99 (exp -> exp_mais .)
    MENOR_IGUAL     reduce using rule 99 (exp -> exp_mais .)
    MAIOR_IGUAL     reduce using rule 99 (exp -> exp_mais .)
    IGUAL           reduce using rule 99 (exp -> exp_mais .)
    DIFERENTE       reduce using rule 99 (exp -> exp_mais .)
    MENOS           reduce using rule 99 (exp -> exp_mais .)
    MAIS            reduce using rule 99 (exp -> exp_mais .)
    ASTERISCO       reduce using rule 99 (exp -> exp_mais .)
    BARRA           reduce using rule 99 (exp -> exp_mais .)
    MOD             reduce using rule 99 (exp -> exp_mais .)
    PONTO_VIRGULA   reduce using rule 99 (exp -> exp_mais .)
    R_PARENTESE     reduce using rule 99 (exp -> exp_mais .)
    R_CHAVE         reduce using rule 99 (exp -> exp_mais .)
    ASPA_DUPLA      reduce using rule 99 (exp -> exp_mais .)
    ASPA_SIMPLES    reduce using rule 99 (exp -> exp_mais .)
    R_COCHETE       reduce using rule 99 (exp -> exp_mais .)
    CONST_STRING    reduce using rule 99 (exp -> exp_mais .)
    VIRGULA         reduce using rule 99 (exp -> exp_mais .)


state 78

    (100) exp -> exp_asterisco .

    AND             reduce using rule 100 (exp -> exp_asterisco .)
    OU              reduce using rule 100 (exp -> exp_asterisco .)
    MENOR           reduce using rule 100 (exp -> exp_asterisco .)
    MAIOR           reduce using rule 100 (exp -> exp_asterisco .)
    MENOR_IGUAL     reduce using rule 100 (exp -> exp_asterisco .)
    MAIOR_IGUAL     reduce using rule 100 (exp -> exp_asterisco .)
    IGUAL           reduce using rule 100 (exp -> exp_asterisco .)
    DIFERENTE       reduce using rule 100 (exp -> exp_asterisco .)
    MENOS           reduce using rule 100 (exp -> exp_asterisco .)
    MAIS            reduce using rule 100 (exp -> exp_asterisco .)
    ASTERISCO       reduce using rule 100 (exp -> exp_asterisco .)
    BARRA           reduce using rule 100 (exp -> exp_asterisco .)
    MOD             reduce using rule 100 (exp -> exp_asterisco .)
    PONTO_VIRGULA   reduce using rule 100 (exp -> exp_asterisco .)
    R_PARENTESE     reduce using rule 100 (exp -> exp_asterisco .)
    R_CHAVE         reduce using rule 100 (exp -> exp_asterisco .)
    ASPA_DUPLA      reduce using rule 100 (exp -> exp_asterisco .)
    ASPA_SIMPLES    reduce using rule 100 (exp -> exp_asterisco .)
    R_COCHETE       reduce using rule 100 (exp -> exp_asterisco .)
    CONST_STRING    reduce using rule 100 (exp -> exp_asterisco .)
    VIRGULA         reduce using rule 100 (exp -> exp_asterisco .)


state 79

    (101) exp -> exp_barra .

    AND             reduce using rule 101 (exp -> exp_barra .)
    OU              reduce using rule 101 (exp -> exp_barra .)
    MENOR           reduce using rule 101 (exp -> exp_barra .)
    MAIOR           reduce using rule 101 (exp -> exp_barra .)
    MENOR_IGUAL     reduce using rule 101 (exp -> exp_barra .)
    MAIOR_IGUAL     reduce using rule 101 (exp -> exp_barra .)
    IGUAL           reduce using rule 101 (exp -> exp_barra .)
    DIFERENTE       reduce using rule 101 (exp -> exp_barra .)
    MENOS           reduce using rule 101 (exp -> exp_barra .)
    MAIS            reduce using rule 101 (exp -> exp_barra .)
    ASTERISCO       reduce using rule 101 (exp -> exp_barra .)
    BARRA           reduce using rule 101 (exp -> exp_barra .)
    MOD             reduce using rule 101 (exp -> exp_barra .)
    PONTO_VIRGULA   reduce using rule 101 (exp -> exp_barra .)
    R_PARENTESE     reduce using rule 101 (exp -> exp_barra .)
    R_CHAVE         reduce using rule 101 (exp -> exp_barra .)
    ASPA_DUPLA      reduce using rule 101 (exp -> exp_barra .)
    ASPA_SIMPLES    reduce using rule 101 (exp -> exp_barra .)
    R_COCHETE       reduce using rule 101 (exp -> exp_barra .)
    CONST_STRING    reduce using rule 101 (exp -> exp_barra .)
    VIRGULA         reduce using rule 101 (exp -> exp_barra .)


state 80

    (102) exp -> exp_mod .

    AND             reduce using rule 102 (exp -> exp_mod .)
    OU              reduce using rule 102 (exp -> exp_mod .)
    MENOR           reduce using rule 102 (exp -> exp_mod .)
    MAIOR           reduce using rule 102 (exp -> exp_mod .)
    MENOR_IGUAL     reduce using rule 102 (exp -> exp_mod .)
    MAIOR_IGUAL     reduce using rule 102 (exp -> exp_mod .)
    IGUAL           reduce using rule 102 (exp -> exp_mod .)
    DIFERENTE       reduce using rule 102 (exp -> exp_mod .)
    MENOS           reduce using rule 102 (exp -> exp_mod .)
    MAIS            reduce using rule 102 (exp -> exp_mod .)
    ASTERISCO       reduce using rule 102 (exp -> exp_mod .)
    BARRA           reduce using rule 102 (exp -> exp_mod .)
    MOD             reduce using rule 102 (exp -> exp_mod .)
    PONTO_VIRGULA   reduce using rule 102 (exp -> exp_mod .)
    R_PARENTESE     reduce using rule 102 (exp -> exp_mod .)
    R_CHAVE         reduce using rule 102 (exp -> exp_mod .)
    ASPA_DUPLA      reduce using rule 102 (exp -> exp_mod .)
    ASPA_SIMPLES    reduce using rule 102 (exp -> exp_mod .)
    R_COCHETE       reduce using rule 102 (exp -> exp_mod .)
    CONST_STRING    reduce using rule 102 (exp -> exp_mod .)
    VIRGULA         reduce using rule 102 (exp -> exp_mod .)


state 81

    (103) exp -> menos_exp .

    AND             reduce using rule 103 (exp -> menos_exp .)
    OU              reduce using rule 103 (exp -> menos_exp .)
    MENOR           reduce using rule 103 (exp -> menos_exp .)
    MAIOR           reduce using rule 103 (exp -> menos_exp .)
    MENOR_IGUAL     reduce using rule 103 (exp -> menos_exp .)
    MAIOR_IGUAL     reduce using rule 103 (exp -> menos_exp .)
    IGUAL           reduce using rule 103 (exp -> menos_exp .)
    DIFERENTE       reduce using rule 103 (exp -> menos_exp .)
    MENOS           reduce using rule 103 (exp -> menos_exp .)
    MAIS            reduce using rule 103 (exp -> menos_exp .)
    ASTERISCO       reduce using rule 103 (exp -> menos_exp .)
    BARRA           reduce using rule 103 (exp -> menos_exp .)
    MOD             reduce using rule 103 (exp -> menos_exp .)
    PONTO_VIRGULA   reduce using rule 103 (exp -> menos_exp .)
    R_PARENTESE     reduce using rule 103 (exp -> menos_exp .)
    R_CHAVE         reduce using rule 103 (exp -> menos_exp .)
    ASPA_DUPLA      reduce using rule 103 (exp -> menos_exp .)
    ASPA_SIMPLES    reduce using rule 103 (exp -> menos_exp .)
    R_COCHETE       reduce using rule 103 (exp -> menos_exp .)
    CONST_STRING    reduce using rule 103 (exp -> menos_exp .)
    VIRGULA         reduce using rule 103 (exp -> menos_exp .)


state 82

    (104) exp -> mais_exp .

    AND             reduce using rule 104 (exp -> mais_exp .)
    OU              reduce using rule 104 (exp -> mais_exp .)
    MENOR           reduce using rule 104 (exp -> mais_exp .)
    MAIOR           reduce using rule 104 (exp -> mais_exp .)
    MENOR_IGUAL     reduce using rule 104 (exp -> mais_exp .)
    MAIOR_IGUAL     reduce using rule 104 (exp -> mais_exp .)
    IGUAL           reduce using rule 104 (exp -> mais_exp .)
    DIFERENTE       reduce using rule 104 (exp -> mais_exp .)
    MENOS           reduce using rule 104 (exp -> mais_exp .)
    MAIS            reduce using rule 104 (exp -> mais_exp .)
    ASTERISCO       reduce using rule 104 (exp -> mais_exp .)
    BARRA           reduce using rule 104 (exp -> mais_exp .)
    MOD             reduce using rule 104 (exp -> mais_exp .)
    PONTO_VIRGULA   reduce using rule 104 (exp -> mais_exp .)
    R_PARENTESE     reduce using rule 104 (exp -> mais_exp .)
    R_CHAVE         reduce using rule 104 (exp -> mais_exp .)
    ASPA_DUPLA      reduce using rule 104 (exp -> mais_exp .)
    ASPA_SIMPLES    reduce using rule 104 (exp -> mais_exp .)
    R_COCHETE       reduce using rule 104 (exp -> mais_exp .)
    CONST_STRING    reduce using rule 104 (exp -> mais_exp .)
    VIRGULA         reduce using rule 104 (exp -> mais_exp .)


state 83

    (105) exp -> asterisco_exp .

    AND             reduce using rule 105 (exp -> asterisco_exp .)
    OU              reduce using rule 105 (exp -> asterisco_exp .)
    MENOR           reduce using rule 105 (exp -> asterisco_exp .)
    MAIOR           reduce using rule 105 (exp -> asterisco_exp .)
    MENOR_IGUAL     reduce using rule 105 (exp -> asterisco_exp .)
    MAIOR_IGUAL     reduce using rule 105 (exp -> asterisco_exp .)
    IGUAL           reduce using rule 105 (exp -> asterisco_exp .)
    DIFERENTE       reduce using rule 105 (exp -> asterisco_exp .)
    MENOS           reduce using rule 105 (exp -> asterisco_exp .)
    MAIS            reduce using rule 105 (exp -> asterisco_exp .)
    ASTERISCO       reduce using rule 105 (exp -> asterisco_exp .)
    BARRA           reduce using rule 105 (exp -> asterisco_exp .)
    MOD             reduce using rule 105 (exp -> asterisco_exp .)
    PONTO_VIRGULA   reduce using rule 105 (exp -> asterisco_exp .)
    R_PARENTESE     reduce using rule 105 (exp -> asterisco_exp .)
    R_CHAVE         reduce using rule 105 (exp -> asterisco_exp .)
    ASPA_DUPLA      reduce using rule 105 (exp -> asterisco_exp .)
    ASPA_SIMPLES    reduce using rule 105 (exp -> asterisco_exp .)
    R_COCHETE       reduce using rule 105 (exp -> asterisco_exp .)
    CONST_STRING    reduce using rule 105 (exp -> asterisco_exp .)
    VIRGULA         reduce using rule 105 (exp -> asterisco_exp .)


state 84

    (106) exp -> negacao_exp .

    AND             reduce using rule 106 (exp -> negacao_exp .)
    OU              reduce using rule 106 (exp -> negacao_exp .)
    MENOR           reduce using rule 106 (exp -> negacao_exp .)
    MAIOR           reduce using rule 106 (exp -> negacao_exp .)
    MENOR_IGUAL     reduce using rule 106 (exp -> negacao_exp .)
    MAIOR_IGUAL     reduce using rule 106 (exp -> negacao_exp .)
    IGUAL           reduce using rule 106 (exp -> negacao_exp .)
    DIFERENTE       reduce using rule 106 (exp -> negacao_exp .)
    MENOS           reduce using rule 106 (exp -> negacao_exp .)
    MAIS            reduce using rule 106 (exp -> negacao_exp .)
    ASTERISCO       reduce using rule 106 (exp -> negacao_exp .)
    BARRA           reduce using rule 106 (exp -> negacao_exp .)
    MOD             reduce using rule 106 (exp -> negacao_exp .)
    PONTO_VIRGULA   reduce using rule 106 (exp -> negacao_exp .)
    R_PARENTESE     reduce using rule 106 (exp -> negacao_exp .)
    R_CHAVE         reduce using rule 106 (exp -> negacao_exp .)
    ASPA_DUPLA      reduce using rule 106 (exp -> negacao_exp .)
    ASPA_SIMPLES    reduce using rule 106 (exp -> negacao_exp .)
    R_COCHETE       reduce using rule 106 (exp -> negacao_exp .)
    CONST_STRING    reduce using rule 106 (exp -> negacao_exp .)
    VIRGULA         reduce using rule 106 (exp -> negacao_exp .)


state 85

    (107) exp -> e_comercial_exp .

    AND             reduce using rule 107 (exp -> e_comercial_exp .)
    OU              reduce using rule 107 (exp -> e_comercial_exp .)
    MENOR           reduce using rule 107 (exp -> e_comercial_exp .)
    MAIOR           reduce using rule 107 (exp -> e_comercial_exp .)
    MENOR_IGUAL     reduce using rule 107 (exp -> e_comercial_exp .)
    MAIOR_IGUAL     reduce using rule 107 (exp -> e_comercial_exp .)
    IGUAL           reduce using rule 107 (exp -> e_comercial_exp .)
    DIFERENTE       reduce using rule 107 (exp -> e_comercial_exp .)
    MENOS           reduce using rule 107 (exp -> e_comercial_exp .)
    MAIS            reduce using rule 107 (exp -> e_comercial_exp .)
    ASTERISCO       reduce using rule 107 (exp -> e_comercial_exp .)
    BARRA           reduce using rule 107 (exp -> e_comercial_exp .)
    MOD             reduce using rule 107 (exp -> e_comercial_exp .)
    PONTO_VIRGULA   reduce using rule 107 (exp -> e_comercial_exp .)
    R_PARENTESE     reduce using rule 107 (exp -> e_comercial_exp .)
    R_CHAVE         reduce using rule 107 (exp -> e_comercial_exp .)
    ASPA_DUPLA      reduce using rule 107 (exp -> e_comercial_exp .)
    ASPA_SIMPLES    reduce using rule 107 (exp -> e_comercial_exp .)
    R_COCHETE       reduce using rule 107 (exp -> e_comercial_exp .)
    CONST_STRING    reduce using rule 107 (exp -> e_comercial_exp .)
    VIRGULA         reduce using rule 107 (exp -> e_comercial_exp .)


state 86

    (108) exp -> const_virgula .

    AND             reduce using rule 108 (exp -> const_virgula .)
    OU              reduce using rule 108 (exp -> const_virgula .)
    MENOR           reduce using rule 108 (exp -> const_virgula .)
    MAIOR           reduce using rule 108 (exp -> const_virgula .)
    MENOR_IGUAL     reduce using rule 108 (exp -> const_virgula .)
    MAIOR_IGUAL     reduce using rule 108 (exp -> const_virgula .)
    IGUAL           reduce using rule 108 (exp -> const_virgula .)
    DIFERENTE       reduce using rule 108 (exp -> const_virgula .)
    MENOS           reduce using rule 108 (exp -> const_virgula .)
    MAIS            reduce using rule 108 (exp -> const_virgula .)
    ASTERISCO       reduce using rule 108 (exp -> const_virgula .)
    BARRA           reduce using rule 108 (exp -> const_virgula .)
    MOD             reduce using rule 108 (exp -> const_virgula .)
    PONTO_VIRGULA   reduce using rule 108 (exp -> const_virgula .)
    R_PARENTESE     reduce using rule 108 (exp -> const_virgula .)
    R_CHAVE         reduce using rule 108 (exp -> const_virgula .)
    ASPA_DUPLA      reduce using rule 108 (exp -> const_virgula .)
    ASPA_SIMPLES    reduce using rule 108 (exp -> const_virgula .)
    R_COCHETE       reduce using rule 108 (exp -> const_virgula .)
    CONST_STRING    reduce using rule 108 (exp -> const_virgula .)
    VIRGULA         reduce using rule 108 (exp -> const_virgula .)


state 87

    (109) exp -> const_ponto .

    AND             reduce using rule 109 (exp -> const_ponto .)
    OU              reduce using rule 109 (exp -> const_ponto .)
    MENOR           reduce using rule 109 (exp -> const_ponto .)
    MAIOR           reduce using rule 109 (exp -> const_ponto .)
    MENOR_IGUAL     reduce using rule 109 (exp -> const_ponto .)
    MAIOR_IGUAL     reduce using rule 109 (exp -> const_ponto .)
    IGUAL           reduce using rule 109 (exp -> const_ponto .)
    DIFERENTE       reduce using rule 109 (exp -> const_ponto .)
    MENOS           reduce using rule 109 (exp -> const_ponto .)
    MAIS            reduce using rule 109 (exp -> const_ponto .)
    ASTERISCO       reduce using rule 109 (exp -> const_ponto .)
    BARRA           reduce using rule 109 (exp -> const_ponto .)
    MOD             reduce using rule 109 (exp -> const_ponto .)
    PONTO_VIRGULA   reduce using rule 109 (exp -> const_ponto .)
    R_PARENTESE     reduce using rule 109 (exp -> const_ponto .)
    R_CHAVE         reduce using rule 109 (exp -> const_ponto .)
    ASPA_DUPLA      reduce using rule 109 (exp -> const_ponto .)
    ASPA_SIMPLES    reduce using rule 109 (exp -> const_ponto .)
    R_COCHETE       reduce using rule 109 (exp -> const_ponto .)
    CONST_STRING    reduce using rule 109 (exp -> const_ponto .)
    VIRGULA         reduce using rule 109 (exp -> const_ponto .)


state 88

    (110) exp -> const_numero_real .

    AND             reduce using rule 110 (exp -> const_numero_real .)
    OU              reduce using rule 110 (exp -> const_numero_real .)
    MENOR           reduce using rule 110 (exp -> const_numero_real .)
    MAIOR           reduce using rule 110 (exp -> const_numero_real .)
    MENOR_IGUAL     reduce using rule 110 (exp -> const_numero_real .)
    MAIOR_IGUAL     reduce using rule 110 (exp -> const_numero_real .)
    IGUAL           reduce using rule 110 (exp -> const_numero_real .)
    DIFERENTE       reduce using rule 110 (exp -> const_numero_real .)
    MENOS           reduce using rule 110 (exp -> const_numero_real .)
    MAIS            reduce using rule 110 (exp -> const_numero_real .)
    ASTERISCO       reduce using rule 110 (exp -> const_numero_real .)
    BARRA           reduce using rule 110 (exp -> const_numero_real .)
    MOD             reduce using rule 110 (exp -> const_numero_real .)
    PONTO_VIRGULA   reduce using rule 110 (exp -> const_numero_real .)
    R_PARENTESE     reduce using rule 110 (exp -> const_numero_real .)
    R_CHAVE         reduce using rule 110 (exp -> const_numero_real .)
    ASPA_DUPLA      reduce using rule 110 (exp -> const_numero_real .)
    ASPA_SIMPLES    reduce using rule 110 (exp -> const_numero_real .)
    R_COCHETE       reduce using rule 110 (exp -> const_numero_real .)
    CONST_STRING    reduce using rule 110 (exp -> const_numero_real .)
    VIRGULA         reduce using rule 110 (exp -> const_numero_real .)


state 89

    (111) exp -> const_numero_int .

    AND             reduce using rule 111 (exp -> const_numero_int .)
    OU              reduce using rule 111 (exp -> const_numero_int .)
    MENOR           reduce using rule 111 (exp -> const_numero_int .)
    MAIOR           reduce using rule 111 (exp -> const_numero_int .)
    MENOR_IGUAL     reduce using rule 111 (exp -> const_numero_int .)
    MAIOR_IGUAL     reduce using rule 111 (exp -> const_numero_int .)
    IGUAL           reduce using rule 111 (exp -> const_numero_int .)
    DIFERENTE       reduce using rule 111 (exp -> const_numero_int .)
    MENOS           reduce using rule 111 (exp -> const_numero_int .)
    MAIS            reduce using rule 111 (exp -> const_numero_int .)
    ASTERISCO       reduce using rule 111 (exp -> const_numero_int .)
    BARRA           reduce using rule 111 (exp -> const_numero_int .)
    MOD             reduce using rule 111 (exp -> const_numero_int .)
    PONTO_VIRGULA   reduce using rule 111 (exp -> const_numero_int .)
    R_PARENTESE     reduce using rule 111 (exp -> const_numero_int .)
    R_CHAVE         reduce using rule 111 (exp -> const_numero_int .)
    ASPA_DUPLA      reduce using rule 111 (exp -> const_numero_int .)
    ASPA_SIMPLES    reduce using rule 111 (exp -> const_numero_int .)
    R_COCHETE       reduce using rule 111 (exp -> const_numero_int .)
    CONST_STRING    reduce using rule 111 (exp -> const_numero_int .)
    VIRGULA         reduce using rule 111 (exp -> const_numero_int .)


state 90

    (112) exp -> const_char .

    AND             reduce using rule 112 (exp -> const_char .)
    OU              reduce using rule 112 (exp -> const_char .)
    MENOR           reduce using rule 112 (exp -> const_char .)
    MAIOR           reduce using rule 112 (exp -> const_char .)
    MENOR_IGUAL     reduce using rule 112 (exp -> const_char .)
    MAIOR_IGUAL     reduce using rule 112 (exp -> const_char .)
    IGUAL           reduce using rule 112 (exp -> const_char .)
    DIFERENTE       reduce using rule 112 (exp -> const_char .)
    MENOS           reduce using rule 112 (exp -> const_char .)
    MAIS            reduce using rule 112 (exp -> const_char .)
    ASTERISCO       reduce using rule 112 (exp -> const_char .)
    BARRA           reduce using rule 112 (exp -> const_char .)
    MOD             reduce using rule 112 (exp -> const_char .)
    PONTO_VIRGULA   reduce using rule 112 (exp -> const_char .)
    R_PARENTESE     reduce using rule 112 (exp -> const_char .)
    R_CHAVE         reduce using rule 112 (exp -> const_char .)
    ASPA_DUPLA      reduce using rule 112 (exp -> const_char .)
    ASPA_SIMPLES    reduce using rule 112 (exp -> const_char .)
    R_COCHETE       reduce using rule 112 (exp -> const_char .)
    CONST_STRING    reduce using rule 112 (exp -> const_char .)
    VIRGULA         reduce using rule 112 (exp -> const_char .)


state 91

    (113) exp -> const_string .

    AND             reduce using rule 113 (exp -> const_string .)
    OU              reduce using rule 113 (exp -> const_string .)
    MENOR           reduce using rule 113 (exp -> const_string .)
    MAIOR           reduce using rule 113 (exp -> const_string .)
    MENOR_IGUAL     reduce using rule 113 (exp -> const_string .)
    MAIOR_IGUAL     reduce using rule 113 (exp -> const_string .)
    IGUAL           reduce using rule 113 (exp -> const_string .)
    DIFERENTE       reduce using rule 113 (exp -> const_string .)
    MENOS           reduce using rule 113 (exp -> const_string .)
    MAIS            reduce using rule 113 (exp -> const_string .)
    ASTERISCO       reduce using rule 113 (exp -> const_string .)
    BARRA           reduce using rule 113 (exp -> const_string .)
    MOD             reduce using rule 113 (exp -> const_string .)
    PONTO_VIRGULA   reduce using rule 113 (exp -> const_string .)
    R_PARENTESE     reduce using rule 113 (exp -> const_string .)
    R_CHAVE         reduce using rule 113 (exp -> const_string .)
    ASPA_DUPLA      reduce using rule 113 (exp -> const_string .)
    ASPA_SIMPLES    reduce using rule 113 (exp -> const_string .)
    R_COCHETE       reduce using rule 113 (exp -> const_string .)
    CONST_STRING    reduce using rule 113 (exp -> const_string .)
    VIRGULA         reduce using rule 113 (exp -> const_string .)


state 92

    (114) exp -> mais_mais .

    AND             reduce using rule 114 (exp -> mais_mais .)
    OU              reduce using rule 114 (exp -> mais_mais .)
    MENOR           reduce using rule 114 (exp -> mais_mais .)
    MAIOR           reduce using rule 114 (exp -> mais_mais .)
    MENOR_IGUAL     reduce using rule 114 (exp -> mais_mais .)
    MAIOR_IGUAL     reduce using rule 114 (exp -> mais_mais .)
    IGUAL           reduce using rule 114 (exp -> mais_mais .)
    DIFERENTE       reduce using rule 114 (exp -> mais_mais .)
    MENOS           reduce using rule 114 (exp -> mais_mais .)
    MAIS            reduce using rule 114 (exp -> mais_mais .)
    ASTERISCO       reduce using rule 114 (exp -> mais_mais .)
    BARRA           reduce using rule 114 (exp -> mais_mais .)
    MOD             reduce using rule 114 (exp -> mais_mais .)
    PONTO_VIRGULA   reduce using rule 114 (exp -> mais_mais .)
    R_PARENTESE     reduce using rule 114 (exp -> mais_mais .)
    R_CHAVE         reduce using rule 114 (exp -> mais_mais .)
    ASPA_DUPLA      reduce using rule 114 (exp -> mais_mais .)
    ASPA_SIMPLES    reduce using rule 114 (exp -> mais_mais .)
    R_COCHETE       reduce using rule 114 (exp -> mais_mais .)
    CONST_STRING    reduce using rule 114 (exp -> mais_mais .)
    VIRGULA         reduce using rule 114 (exp -> mais_mais .)


state 93

    (115) exp -> menos_menos .

    AND             reduce using rule 115 (exp -> menos_menos .)
    OU              reduce using rule 115 (exp -> menos_menos .)
    MENOR           reduce using rule 115 (exp -> menos_menos .)
    MAIOR           reduce using rule 115 (exp -> menos_menos .)
    MENOR_IGUAL     reduce using rule 115 (exp -> menos_menos .)
    MAIOR_IGUAL     reduce using rule 115 (exp -> menos_menos .)
    IGUAL           reduce using rule 115 (exp -> menos_menos .)
    DIFERENTE       reduce using rule 115 (exp -> menos_menos .)
    MENOS           reduce using rule 115 (exp -> menos_menos .)
    MAIS            reduce using rule 115 (exp -> menos_menos .)
    ASTERISCO       reduce using rule 115 (exp -> menos_menos .)
    BARRA           reduce using rule 115 (exp -> menos_menos .)
    MOD             reduce using rule 115 (exp -> menos_menos .)
    PONTO_VIRGULA   reduce using rule 115 (exp -> menos_menos .)
    R_PARENTESE     reduce using rule 115 (exp -> menos_menos .)
    R_CHAVE         reduce using rule 115 (exp -> menos_menos .)
    ASPA_DUPLA      reduce using rule 115 (exp -> menos_menos .)
    ASPA_SIMPLES    reduce using rule 115 (exp -> menos_menos .)
    R_COCHETE       reduce using rule 115 (exp -> menos_menos .)
    CONST_STRING    reduce using rule 115 (exp -> menos_menos .)
    VIRGULA         reduce using rule 115 (exp -> menos_menos .)


state 94

    (116) exp -> id .

    AND             reduce using rule 116 (exp -> id .)
    OU              reduce using rule 116 (exp -> id .)
    MENOR           reduce using rule 116 (exp -> id .)
    MAIOR           reduce using rule 116 (exp -> id .)
    MENOR_IGUAL     reduce using rule 116 (exp -> id .)
    MAIOR_IGUAL     reduce using rule 116 (exp -> id .)
    IGUAL           reduce using rule 116 (exp -> id .)
    DIFERENTE       reduce using rule 116 (exp -> id .)
    MENOS           reduce using rule 116 (exp -> id .)
    MAIS            reduce using rule 116 (exp -> id .)
    ASTERISCO       reduce using rule 116 (exp -> id .)
    BARRA           reduce using rule 116 (exp -> id .)
    MOD             reduce using rule 116 (exp -> id .)
    PONTO_VIRGULA   reduce using rule 116 (exp -> id .)
    R_PARENTESE     reduce using rule 116 (exp -> id .)
    R_CHAVE         reduce using rule 116 (exp -> id .)
    ASPA_DUPLA      reduce using rule 116 (exp -> id .)
    ASPA_SIMPLES    reduce using rule 116 (exp -> id .)
    R_COCHETE       reduce using rule 116 (exp -> id .)
    CONST_STRING    reduce using rule 116 (exp -> id .)
    VIRGULA         reduce using rule 116 (exp -> id .)


state 95

    (117) exp -> true .

    AND             reduce using rule 117 (exp -> true .)
    OU              reduce using rule 117 (exp -> true .)
    MENOR           reduce using rule 117 (exp -> true .)
    MAIOR           reduce using rule 117 (exp -> true .)
    MENOR_IGUAL     reduce using rule 117 (exp -> true .)
    MAIOR_IGUAL     reduce using rule 117 (exp -> true .)
    IGUAL           reduce using rule 117 (exp -> true .)
    DIFERENTE       reduce using rule 117 (exp -> true .)
    MENOS           reduce using rule 117 (exp -> true .)
    MAIS            reduce using rule 117 (exp -> true .)
    ASTERISCO       reduce using rule 117 (exp -> true .)
    BARRA           reduce using rule 117 (exp -> true .)
    MOD             reduce using rule 117 (exp -> true .)
    PONTO_VIRGULA   reduce using rule 117 (exp -> true .)
    R_PARENTESE     reduce using rule 117 (exp -> true .)
    R_CHAVE         reduce using rule 117 (exp -> true .)
    ASPA_DUPLA      reduce using rule 117 (exp -> true .)
    ASPA_SIMPLES    reduce using rule 117 (exp -> true .)
    R_COCHETE       reduce using rule 117 (exp -> true .)
    CONST_STRING    reduce using rule 117 (exp -> true .)
    VIRGULA         reduce using rule 117 (exp -> true .)


state 96

    (118) exp -> false .

    AND             reduce using rule 118 (exp -> false .)
    OU              reduce using rule 118 (exp -> false .)
    MENOR           reduce using rule 118 (exp -> false .)
    MAIOR           reduce using rule 118 (exp -> false .)
    MENOR_IGUAL     reduce using rule 118 (exp -> false .)
    MAIOR_IGUAL     reduce using rule 118 (exp -> false .)
    IGUAL           reduce using rule 118 (exp -> false .)
    DIFERENTE       reduce using rule 118 (exp -> false .)
    MENOS           reduce using rule 118 (exp -> false .)
    MAIS            reduce using rule 118 (exp -> false .)
    ASTERISCO       reduce using rule 118 (exp -> false .)
    BARRA           reduce using rule 118 (exp -> false .)
    MOD             reduce using rule 118 (exp -> false .)
    PONTO_VIRGULA   reduce using rule 118 (exp -> false .)
    R_PARENTESE     reduce using rule 118 (exp -> false .)
    R_CHAVE         reduce using rule 118 (exp -> false .)
    ASPA_DUPLA      reduce using rule 118 (exp -> false .)
    ASPA_SIMPLES    reduce using rule 118 (exp -> false .)
    R_COCHETE       reduce using rule 118 (exp -> false .)
    CONST_STRING    reduce using rule 118 (exp -> false .)
    VIRGULA         reduce using rule 118 (exp -> false .)


state 97

    (119) exp -> id_atribuicao_exp .

    AND             reduce using rule 119 (exp -> id_atribuicao_exp .)
    OU              reduce using rule 119 (exp -> id_atribuicao_exp .)
    MENOR           reduce using rule 119 (exp -> id_atribuicao_exp .)
    MAIOR           reduce using rule 119 (exp -> id_atribuicao_exp .)
    MENOR_IGUAL     reduce using rule 119 (exp -> id_atribuicao_exp .)
    MAIOR_IGUAL     reduce using rule 119 (exp -> id_atribuicao_exp .)
    IGUAL           reduce using rule 119 (exp -> id_atribuicao_exp .)
    DIFERENTE       reduce using rule 119 (exp -> id_atribuicao_exp .)
    MENOS           reduce using rule 119 (exp -> id_atribuicao_exp .)
    MAIS            reduce using rule 119 (exp -> id_atribuicao_exp .)
    ASTERISCO       reduce using rule 119 (exp -> id_atribuicao_exp .)
    BARRA           reduce using rule 119 (exp -> id_atribuicao_exp .)
    MOD             reduce using rule 119 (exp -> id_atribuicao_exp .)
    PONTO_VIRGULA   reduce using rule 119 (exp -> id_atribuicao_exp .)
    R_PARENTESE     reduce using rule 119 (exp -> id_atribuicao_exp .)
    R_CHAVE         reduce using rule 119 (exp -> id_atribuicao_exp .)
    ASPA_DUPLA      reduce using rule 119 (exp -> id_atribuicao_exp .)
    ASPA_SIMPLES    reduce using rule 119 (exp -> id_atribuicao_exp .)
    R_COCHETE       reduce using rule 119 (exp -> id_atribuicao_exp .)
    CONST_STRING    reduce using rule 119 (exp -> id_atribuicao_exp .)
    VIRGULA         reduce using rule 119 (exp -> id_atribuicao_exp .)


state 98

    (120) exp -> id_cochete_exp .

    AND             reduce using rule 120 (exp -> id_cochete_exp .)
    OU              reduce using rule 120 (exp -> id_cochete_exp .)
    MENOR           reduce using rule 120 (exp -> id_cochete_exp .)
    MAIOR           reduce using rule 120 (exp -> id_cochete_exp .)
    MENOR_IGUAL     reduce using rule 120 (exp -> id_cochete_exp .)
    MAIOR_IGUAL     reduce using rule 120 (exp -> id_cochete_exp .)
    IGUAL           reduce using rule 120 (exp -> id_cochete_exp .)
    DIFERENTE       reduce using rule 120 (exp -> id_cochete_exp .)
    MENOS           reduce using rule 120 (exp -> id_cochete_exp .)
    MAIS            reduce using rule 120 (exp -> id_cochete_exp .)
    ASTERISCO       reduce using rule 120 (exp -> id_cochete_exp .)
    BARRA           reduce using rule 120 (exp -> id_cochete_exp .)
    MOD             reduce using rule 120 (exp -> id_cochete_exp .)
    PONTO_VIRGULA   reduce using rule 120 (exp -> id_cochete_exp .)
    R_PARENTESE     reduce using rule 120 (exp -> id_cochete_exp .)
    R_CHAVE         reduce using rule 120 (exp -> id_cochete_exp .)
    ASPA_DUPLA      reduce using rule 120 (exp -> id_cochete_exp .)
    ASPA_SIMPLES    reduce using rule 120 (exp -> id_cochete_exp .)
    R_COCHETE       reduce using rule 120 (exp -> id_cochete_exp .)
    CONST_STRING    reduce using rule 120 (exp -> id_cochete_exp .)
    VIRGULA         reduce using rule 120 (exp -> id_cochete_exp .)


state 99

    (121) exp -> parentese_exp .

    AND             reduce using rule 121 (exp -> parentese_exp .)
    OU              reduce using rule 121 (exp -> parentese_exp .)
    MENOR           reduce using rule 121 (exp -> parentese_exp .)
    MAIOR           reduce using rule 121 (exp -> parentese_exp .)
    MENOR_IGUAL     reduce using rule 121 (exp -> parentese_exp .)
    MAIOR_IGUAL     reduce using rule 121 (exp -> parentese_exp .)
    IGUAL           reduce using rule 121 (exp -> parentese_exp .)
    DIFERENTE       reduce using rule 121 (exp -> parentese_exp .)
    MENOS           reduce using rule 121 (exp -> parentese_exp .)
    MAIS            reduce using rule 121 (exp -> parentese_exp .)
    ASTERISCO       reduce using rule 121 (exp -> parentese_exp .)
    BARRA           reduce using rule 121 (exp -> parentese_exp .)
    MOD             reduce using rule 121 (exp -> parentese_exp .)
    PONTO_VIRGULA   reduce using rule 121 (exp -> parentese_exp .)
    R_PARENTESE     reduce using rule 121 (exp -> parentese_exp .)
    R_CHAVE         reduce using rule 121 (exp -> parentese_exp .)
    ASPA_DUPLA      reduce using rule 121 (exp -> parentese_exp .)
    ASPA_SIMPLES    reduce using rule 121 (exp -> parentese_exp .)
    R_COCHETE       reduce using rule 121 (exp -> parentese_exp .)
    CONST_STRING    reduce using rule 121 (exp -> parentese_exp .)
    VIRGULA         reduce using rule 121 (exp -> parentese_exp .)


state 100

    (122) exp -> chave_exp .

    AND             reduce using rule 122 (exp -> chave_exp .)
    OU              reduce using rule 122 (exp -> chave_exp .)
    MENOR           reduce using rule 122 (exp -> chave_exp .)
    MAIOR           reduce using rule 122 (exp -> chave_exp .)
    MENOR_IGUAL     reduce using rule 122 (exp -> chave_exp .)
    MAIOR_IGUAL     reduce using rule 122 (exp -> chave_exp .)
    IGUAL           reduce using rule 122 (exp -> chave_exp .)
    DIFERENTE       reduce using rule 122 (exp -> chave_exp .)
    MENOS           reduce using rule 122 (exp -> chave_exp .)
    MAIS            reduce using rule 122 (exp -> chave_exp .)
    ASTERISCO       reduce using rule 122 (exp -> chave_exp .)
    BARRA           reduce using rule 122 (exp -> chave_exp .)
    MOD             reduce using rule 122 (exp -> chave_exp .)
    PONTO_VIRGULA   reduce using rule 122 (exp -> chave_exp .)
    R_PARENTESE     reduce using rule 122 (exp -> chave_exp .)
    R_CHAVE         reduce using rule 122 (exp -> chave_exp .)
    ASPA_DUPLA      reduce using rule 122 (exp -> chave_exp .)
    ASPA_SIMPLES    reduce using rule 122 (exp -> chave_exp .)
    R_COCHETE       reduce using rule 122 (exp -> chave_exp .)
    CONST_STRING    reduce using rule 122 (exp -> chave_exp .)
    VIRGULA         reduce using rule 122 (exp -> chave_exp .)


state 101

    (127) aspa_dupla_exp -> ASPA_DUPLA . exp ASPA_DUPLA
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 157
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 102

    (128) aspa_simples_exp -> ASPA_SIMPLES . exp ASPA_SIMPLES
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 158
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 103

    (70) menos_exp -> MENOS . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 159
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 104

    (71) mais_exp -> MAIS . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 160
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 105

    (72) asterisco_exp -> ASTERISCO . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 161
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 106

    (73) negacao_exp -> NEGACAO . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 162
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 107

    (74) e_comercial_exp -> E_COMERCIAL . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 163
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 108

    (75) const_virgula -> VIRGULA .

    AND             reduce using rule 75 (const_virgula -> VIRGULA .)
    OU              reduce using rule 75 (const_virgula -> VIRGULA .)
    MENOR           reduce using rule 75 (const_virgula -> VIRGULA .)
    MAIOR           reduce using rule 75 (const_virgula -> VIRGULA .)
    MENOR_IGUAL     reduce using rule 75 (const_virgula -> VIRGULA .)
    MAIOR_IGUAL     reduce using rule 75 (const_virgula -> VIRGULA .)
    IGUAL           reduce using rule 75 (const_virgula -> VIRGULA .)
    DIFERENTE       reduce using rule 75 (const_virgula -> VIRGULA .)
    MENOS           reduce using rule 75 (const_virgula -> VIRGULA .)
    MAIS            reduce using rule 75 (const_virgula -> VIRGULA .)
    ASTERISCO       reduce using rule 75 (const_virgula -> VIRGULA .)
    BARRA           reduce using rule 75 (const_virgula -> VIRGULA .)
    MOD             reduce using rule 75 (const_virgula -> VIRGULA .)
    PONTO_VIRGULA   reduce using rule 75 (const_virgula -> VIRGULA .)
    R_PARENTESE     reduce using rule 75 (const_virgula -> VIRGULA .)
    R_CHAVE         reduce using rule 75 (const_virgula -> VIRGULA .)
    ASPA_DUPLA      reduce using rule 75 (const_virgula -> VIRGULA .)
    ASPA_SIMPLES    reduce using rule 75 (const_virgula -> VIRGULA .)
    R_COCHETE       reduce using rule 75 (const_virgula -> VIRGULA .)
    CONST_STRING    reduce using rule 75 (const_virgula -> VIRGULA .)
    VIRGULA         reduce using rule 75 (const_virgula -> VIRGULA .)


state 109

    (76) const_ponto -> PONTO .

    AND             reduce using rule 76 (const_ponto -> PONTO .)
    OU              reduce using rule 76 (const_ponto -> PONTO .)
    MENOR           reduce using rule 76 (const_ponto -> PONTO .)
    MAIOR           reduce using rule 76 (const_ponto -> PONTO .)
    MENOR_IGUAL     reduce using rule 76 (const_ponto -> PONTO .)
    MAIOR_IGUAL     reduce using rule 76 (const_ponto -> PONTO .)
    IGUAL           reduce using rule 76 (const_ponto -> PONTO .)
    DIFERENTE       reduce using rule 76 (const_ponto -> PONTO .)
    MENOS           reduce using rule 76 (const_ponto -> PONTO .)
    MAIS            reduce using rule 76 (const_ponto -> PONTO .)
    ASTERISCO       reduce using rule 76 (const_ponto -> PONTO .)
    BARRA           reduce using rule 76 (const_ponto -> PONTO .)
    MOD             reduce using rule 76 (const_ponto -> PONTO .)
    PONTO_VIRGULA   reduce using rule 76 (const_ponto -> PONTO .)
    R_PARENTESE     reduce using rule 76 (const_ponto -> PONTO .)
    R_CHAVE         reduce using rule 76 (const_ponto -> PONTO .)
    ASPA_DUPLA      reduce using rule 76 (const_ponto -> PONTO .)
    ASPA_SIMPLES    reduce using rule 76 (const_ponto -> PONTO .)
    R_COCHETE       reduce using rule 76 (const_ponto -> PONTO .)
    CONST_STRING    reduce using rule 76 (const_ponto -> PONTO .)
    VIRGULA         reduce using rule 76 (const_ponto -> PONTO .)


state 110

    (77) const_numero_real -> NUMERO_REAL .

    AND             reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    OU              reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    MENOR           reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    MAIOR           reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    MENOR_IGUAL     reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    MAIOR_IGUAL     reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    IGUAL           reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    DIFERENTE       reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    MENOS           reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    MAIS            reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    ASTERISCO       reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    BARRA           reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    MOD             reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    PONTO_VIRGULA   reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    R_PARENTESE     reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    R_CHAVE         reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    ASPA_DUPLA      reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    ASPA_SIMPLES    reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    R_COCHETE       reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    CONST_STRING    reduce using rule 77 (const_numero_real -> NUMERO_REAL .)
    VIRGULA         reduce using rule 77 (const_numero_real -> NUMERO_REAL .)


state 111

    (78) const_numero_int -> NUMERO_INT .

    AND             reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    OU              reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    MENOR           reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    MAIOR           reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    MENOR_IGUAL     reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    MAIOR_IGUAL     reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    IGUAL           reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    DIFERENTE       reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    MENOS           reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    MAIS            reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    ASTERISCO       reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    BARRA           reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    MOD             reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    PONTO_VIRGULA   reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    R_PARENTESE     reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    R_CHAVE         reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    ASPA_DUPLA      reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    ASPA_SIMPLES    reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    R_COCHETE       reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    CONST_STRING    reduce using rule 78 (const_numero_int -> NUMERO_INT .)
    VIRGULA         reduce using rule 78 (const_numero_int -> NUMERO_INT .)


state 112

    (79) const_char -> CONST_CHAR .

    AND             reduce using rule 79 (const_char -> CONST_CHAR .)
    OU              reduce using rule 79 (const_char -> CONST_CHAR .)
    MENOR           reduce using rule 79 (const_char -> CONST_CHAR .)
    MAIOR           reduce using rule 79 (const_char -> CONST_CHAR .)
    MENOR_IGUAL     reduce using rule 79 (const_char -> CONST_CHAR .)
    MAIOR_IGUAL     reduce using rule 79 (const_char -> CONST_CHAR .)
    IGUAL           reduce using rule 79 (const_char -> CONST_CHAR .)
    DIFERENTE       reduce using rule 79 (const_char -> CONST_CHAR .)
    MENOS           reduce using rule 79 (const_char -> CONST_CHAR .)
    MAIS            reduce using rule 79 (const_char -> CONST_CHAR .)
    ASTERISCO       reduce using rule 79 (const_char -> CONST_CHAR .)
    BARRA           reduce using rule 79 (const_char -> CONST_CHAR .)
    MOD             reduce using rule 79 (const_char -> CONST_CHAR .)
    PONTO_VIRGULA   reduce using rule 79 (const_char -> CONST_CHAR .)
    R_PARENTESE     reduce using rule 79 (const_char -> CONST_CHAR .)
    R_CHAVE         reduce using rule 79 (const_char -> CONST_CHAR .)
    ASPA_DUPLA      reduce using rule 79 (const_char -> CONST_CHAR .)
    ASPA_SIMPLES    reduce using rule 79 (const_char -> CONST_CHAR .)
    R_COCHETE       reduce using rule 79 (const_char -> CONST_CHAR .)
    CONST_STRING    reduce using rule 79 (const_char -> CONST_CHAR .)
    VIRGULA         reduce using rule 79 (const_char -> CONST_CHAR .)


state 113

    (80) const_string -> CONST_STRING .

    AND             reduce using rule 80 (const_string -> CONST_STRING .)
    OU              reduce using rule 80 (const_string -> CONST_STRING .)
    MENOR           reduce using rule 80 (const_string -> CONST_STRING .)
    MAIOR           reduce using rule 80 (const_string -> CONST_STRING .)
    MENOR_IGUAL     reduce using rule 80 (const_string -> CONST_STRING .)
    MAIOR_IGUAL     reduce using rule 80 (const_string -> CONST_STRING .)
    IGUAL           reduce using rule 80 (const_string -> CONST_STRING .)
    DIFERENTE       reduce using rule 80 (const_string -> CONST_STRING .)
    MENOS           reduce using rule 80 (const_string -> CONST_STRING .)
    MAIS            reduce using rule 80 (const_string -> CONST_STRING .)
    ASTERISCO       reduce using rule 80 (const_string -> CONST_STRING .)
    BARRA           reduce using rule 80 (const_string -> CONST_STRING .)
    MOD             reduce using rule 80 (const_string -> CONST_STRING .)
    PONTO_VIRGULA   reduce using rule 80 (const_string -> CONST_STRING .)
    R_PARENTESE     reduce using rule 80 (const_string -> CONST_STRING .)
    R_CHAVE         reduce using rule 80 (const_string -> CONST_STRING .)
    ASPA_DUPLA      reduce using rule 80 (const_string -> CONST_STRING .)
    ASPA_SIMPLES    reduce using rule 80 (const_string -> CONST_STRING .)
    R_COCHETE       reduce using rule 80 (const_string -> CONST_STRING .)
    CONST_STRING    reduce using rule 80 (const_string -> CONST_STRING .)
    VIRGULA         reduce using rule 80 (const_string -> CONST_STRING .)


state 114

    (81) mais_mais -> MAIS_MAIS .

    AND             reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    OU              reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    MENOR           reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    MAIOR           reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    MENOR_IGUAL     reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    MAIOR_IGUAL     reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    IGUAL           reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    DIFERENTE       reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    MENOS           reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    MAIS            reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    ASTERISCO       reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    BARRA           reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    MOD             reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    PONTO_VIRGULA   reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    R_PARENTESE     reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    R_CHAVE         reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    ASPA_DUPLA      reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    ASPA_SIMPLES    reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    R_COCHETE       reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    CONST_STRING    reduce using rule 81 (mais_mais -> MAIS_MAIS .)
    VIRGULA         reduce using rule 81 (mais_mais -> MAIS_MAIS .)


state 115

    (82) menos_menos -> MENOS_MENOS .

    AND             reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    OU              reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    MENOR           reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    MAIOR           reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    MENOR_IGUAL     reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    MAIOR_IGUAL     reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    IGUAL           reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    DIFERENTE       reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    MENOS           reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    MAIS            reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    ASTERISCO       reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    BARRA           reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    MOD             reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    PONTO_VIRGULA   reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    R_PARENTESE     reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    R_CHAVE         reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    ASPA_DUPLA      reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    ASPA_SIMPLES    reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    R_COCHETE       reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    CONST_STRING    reduce using rule 82 (menos_menos -> MENOS_MENOS .)
    VIRGULA         reduce using rule 82 (menos_menos -> MENOS_MENOS .)


state 116

    (83) id -> ID .
    (86) id_atribuicao_exp -> ID . ATRIBUICAO exp
    (87) id_cochete_exp -> ID . L_COCHETE exp R_COCHETE

    AND             reduce using rule 83 (id -> ID .)
    OU              reduce using rule 83 (id -> ID .)
    MENOR           reduce using rule 83 (id -> ID .)
    MAIOR           reduce using rule 83 (id -> ID .)
    MENOR_IGUAL     reduce using rule 83 (id -> ID .)
    MAIOR_IGUAL     reduce using rule 83 (id -> ID .)
    IGUAL           reduce using rule 83 (id -> ID .)
    DIFERENTE       reduce using rule 83 (id -> ID .)
    MENOS           reduce using rule 83 (id -> ID .)
    MAIS            reduce using rule 83 (id -> ID .)
    ASTERISCO       reduce using rule 83 (id -> ID .)
    BARRA           reduce using rule 83 (id -> ID .)
    MOD             reduce using rule 83 (id -> ID .)
    PONTO_VIRGULA   reduce using rule 83 (id -> ID .)
    R_PARENTESE     reduce using rule 83 (id -> ID .)
    R_CHAVE         reduce using rule 83 (id -> ID .)
    ASPA_DUPLA      reduce using rule 83 (id -> ID .)
    ASPA_SIMPLES    reduce using rule 83 (id -> ID .)
    R_COCHETE       reduce using rule 83 (id -> ID .)
    CONST_STRING    reduce using rule 83 (id -> ID .)
    VIRGULA         reduce using rule 83 (id -> ID .)
    ATRIBUICAO      shift and go to state 164
    L_COCHETE       shift and go to state 165


state 117

    (84) true -> TRUE .

    AND             reduce using rule 84 (true -> TRUE .)
    OU              reduce using rule 84 (true -> TRUE .)
    MENOR           reduce using rule 84 (true -> TRUE .)
    MAIOR           reduce using rule 84 (true -> TRUE .)
    MENOR_IGUAL     reduce using rule 84 (true -> TRUE .)
    MAIOR_IGUAL     reduce using rule 84 (true -> TRUE .)
    IGUAL           reduce using rule 84 (true -> TRUE .)
    DIFERENTE       reduce using rule 84 (true -> TRUE .)
    MENOS           reduce using rule 84 (true -> TRUE .)
    MAIS            reduce using rule 84 (true -> TRUE .)
    ASTERISCO       reduce using rule 84 (true -> TRUE .)
    BARRA           reduce using rule 84 (true -> TRUE .)
    MOD             reduce using rule 84 (true -> TRUE .)
    PONTO_VIRGULA   reduce using rule 84 (true -> TRUE .)
    R_PARENTESE     reduce using rule 84 (true -> TRUE .)
    R_CHAVE         reduce using rule 84 (true -> TRUE .)
    ASPA_DUPLA      reduce using rule 84 (true -> TRUE .)
    ASPA_SIMPLES    reduce using rule 84 (true -> TRUE .)
    R_COCHETE       reduce using rule 84 (true -> TRUE .)
    CONST_STRING    reduce using rule 84 (true -> TRUE .)
    VIRGULA         reduce using rule 84 (true -> TRUE .)


state 118

    (85) false -> FALSE .

    AND             reduce using rule 85 (false -> FALSE .)
    OU              reduce using rule 85 (false -> FALSE .)
    MENOR           reduce using rule 85 (false -> FALSE .)
    MAIOR           reduce using rule 85 (false -> FALSE .)
    MENOR_IGUAL     reduce using rule 85 (false -> FALSE .)
    MAIOR_IGUAL     reduce using rule 85 (false -> FALSE .)
    IGUAL           reduce using rule 85 (false -> FALSE .)
    DIFERENTE       reduce using rule 85 (false -> FALSE .)
    MENOS           reduce using rule 85 (false -> FALSE .)
    MAIS            reduce using rule 85 (false -> FALSE .)
    ASTERISCO       reduce using rule 85 (false -> FALSE .)
    BARRA           reduce using rule 85 (false -> FALSE .)
    MOD             reduce using rule 85 (false -> FALSE .)
    PONTO_VIRGULA   reduce using rule 85 (false -> FALSE .)
    R_PARENTESE     reduce using rule 85 (false -> FALSE .)
    R_CHAVE         reduce using rule 85 (false -> FALSE .)
    ASPA_DUPLA      reduce using rule 85 (false -> FALSE .)
    ASPA_SIMPLES    reduce using rule 85 (false -> FALSE .)
    R_COCHETE       reduce using rule 85 (false -> FALSE .)
    CONST_STRING    reduce using rule 85 (false -> FALSE .)
    VIRGULA         reduce using rule 85 (false -> FALSE .)


state 119

    (29) declaracao -> tipo pointer ID . PONTO_VIRGULA stm
    (30) declaracao -> tipo pointer ID . ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> tipo pointer ID . L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> tipo pointer ID . L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> tipo pointer ID . L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> tipo pointer ID . L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 166
    ATRIBUICAO      shift and go to state 167
    L_COCHETE       shift and go to state 168


state 120

    (39) equacao -> pointer ID L_COCHETE . arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> pointer ID L_COCHETE . arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (42) arg -> . expression
    (43) arg -> . lambda
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    R_COCHETE       reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    arg                            shift and go to state 169
    expression                     shift and go to state 130
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 121

    (41) equacao -> pointer ID ATRIBUICAO . expression PONTO_VIRGULA stm
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 170
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 122

    (130) condicional -> IF L_PARENTESE expression . R_PARENTESE stm
    (131) condicional -> IF L_PARENTESE expression . R_PARENTESE stm ELSE stm

    R_PARENTESE     shift and go to state 171


state 123

    (53) entrada -> SCANF L_PARENTESE expression_entrada . R_PARENTESE PONTO_VIRGULA stm

    R_PARENTESE     shift and go to state 172


state 124

    (54) expression_entrada -> CONST_STRING . VIRGULA E_COMERCIAL ID expression_entrada

    VIRGULA         shift and go to state 173


state 125

    (55) expression_entrada -> VIRGULA . E_COMERCIAL ID expression_entrada

    E_COMERCIAL     shift and go to state 174


state 126

    (56) expression_entrada -> lambda .

    R_PARENTESE     reduce using rule 56 (expression_entrada -> lambda .)


state 127

    (14) break -> BREAK PONTO_VIRGULA stm .

    RETURN          reduce using rule 14 (break -> BREAK PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 14 (break -> BREAK PONTO_VIRGULA stm .)
    ELSE            reduce using rule 14 (break -> BREAK PONTO_VIRGULA stm .)


state 128

    (15) continue -> CONTINUE PONTO_VIRGULA stm .

    RETURN          reduce using rule 15 (continue -> CONTINUE PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 15 (continue -> CONTINUE PONTO_VIRGULA stm .)
    ELSE            reduce using rule 15 (continue -> CONTINUE PONTO_VIRGULA stm .)


state 129

    (135) for -> FOR L_PARENTESE tipo . ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm

    ID              shift and go to state 175


state 130

    (42) arg -> expression .

    PONTO_VIRGULA   reduce using rule 42 (arg -> expression .)
    R_COCHETE       reduce using rule 42 (arg -> expression .)
    R_PARENTESE     reduce using rule 42 (arg -> expression .)


state 131

    (136) for -> FOR L_PARENTESE arg . PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm

    PONTO_VIRGULA   shift and go to state 176


state 132

    (43) arg -> lambda .

    PONTO_VIRGULA   reduce using rule 43 (arg -> lambda .)
    R_COCHETE       reduce using rule 43 (arg -> lambda .)
    R_PARENTESE     reduce using rule 43 (arg -> lambda .)


state 133

    (137) while -> WHILE L_PARENTESE expression . R_PARENTESE bloco stm

    R_PARENTESE     shift and go to state 177


state 134

    (138) do_while -> DO bloco WHILE . L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm

    L_PARENTESE     shift and go to state 178


state 135

    (48) mostrar1 -> PRINTF L_PARENTESE CONST_STRING . R_PARENTESE PONTO_VIRGULA stm
    (50) expression_mostrar -> CONST_STRING . VIRGULA expression expression_mostrar

    R_PARENTESE     shift and go to state 179
    VIRGULA         shift and go to state 180


state 136

    (49) mostrar2 -> PRINTF L_PARENTESE expression_mostrar . R_PARENTESE PONTO_VIRGULA stm

    R_PARENTESE     shift and go to state 181


state 137

    (51) expression_mostrar -> VIRGULA . expression
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 182
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 138

    (52) expression_mostrar -> lambda .

    R_PARENTESE     reduce using rule 52 (expression_mostrar -> lambda .)


state 139

    (88) parentese_exp -> L_PARENTESE . exp R_PARENTESE
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 141
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 140

    (129) extras -> L_PARENTESE tipo . R_PARENTESE exp

    R_PARENTESE     shift and go to state 183


state 141

    (88) parentese_exp -> L_PARENTESE exp . R_PARENTESE
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    R_PARENTESE     shift and go to state 184
    AND             shift and go to state 144
    OU              shift and go to state 145
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156


state 142

    (89) chave_exp -> L_CHAVE exp . R_CHAVE
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    R_CHAVE         shift and go to state 185
    AND             shift and go to state 144
    OU              shift and go to state 145
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156


state 143

    (1) main -> INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA . R_CHAVE

    R_CHAVE         shift and go to state 186


state 144

    (57) exp_and -> exp AND . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 187
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 145

    (58) exp_ou -> exp OU . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 188
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 146

    (59) exp_menor -> exp MENOR . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 189
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 147

    (60) exp_maior -> exp MAIOR . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 190
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 148

    (61) exp_menor_igual -> exp MENOR_IGUAL . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 191
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 149

    (62) exp_maior_igual -> exp MAIOR_IGUAL . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 192
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 150

    (63) exp_igual -> exp IGUAL . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 193
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 151

    (64) exp_diferente -> exp DIFERENTE . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 194
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 152

    (65) exp_menos -> exp MENOS . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 195
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 153

    (66) exp_mais -> exp MAIS . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 196
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 154

    (67) exp_asterisco -> exp ASTERISCO . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 197
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 155

    (68) exp_barra -> exp BARRA . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 198
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 156

    (69) exp_mod -> exp MOD . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 199
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 157

    (127) aspa_dupla_exp -> ASPA_DUPLA exp . ASPA_DUPLA
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    ASPA_DUPLA      shift and go to state 200
    AND             shift and go to state 144
    OU              shift and go to state 145
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156


state 158

    (128) aspa_simples_exp -> ASPA_SIMPLES exp . ASPA_SIMPLES
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    ASPA_SIMPLES    shift and go to state 201
    AND             shift and go to state 144
    OU              shift and go to state 145
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156


state 159

    (70) menos_exp -> MENOS exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 70 (menos_exp -> MENOS exp .)
    OU              reduce using rule 70 (menos_exp -> MENOS exp .)
    MENOR           reduce using rule 70 (menos_exp -> MENOS exp .)
    MAIOR           reduce using rule 70 (menos_exp -> MENOS exp .)
    MENOR_IGUAL     reduce using rule 70 (menos_exp -> MENOS exp .)
    MAIOR_IGUAL     reduce using rule 70 (menos_exp -> MENOS exp .)
    IGUAL           reduce using rule 70 (menos_exp -> MENOS exp .)
    DIFERENTE       reduce using rule 70 (menos_exp -> MENOS exp .)
    MENOS           reduce using rule 70 (menos_exp -> MENOS exp .)
    MAIS            reduce using rule 70 (menos_exp -> MENOS exp .)
    ASTERISCO       reduce using rule 70 (menos_exp -> MENOS exp .)
    BARRA           reduce using rule 70 (menos_exp -> MENOS exp .)
    MOD             reduce using rule 70 (menos_exp -> MENOS exp .)
    PONTO_VIRGULA   reduce using rule 70 (menos_exp -> MENOS exp .)
    R_PARENTESE     reduce using rule 70 (menos_exp -> MENOS exp .)
    R_CHAVE         reduce using rule 70 (menos_exp -> MENOS exp .)
    ASPA_DUPLA      reduce using rule 70 (menos_exp -> MENOS exp .)
    ASPA_SIMPLES    reduce using rule 70 (menos_exp -> MENOS exp .)
    R_COCHETE       reduce using rule 70 (menos_exp -> MENOS exp .)
    CONST_STRING    reduce using rule 70 (menos_exp -> MENOS exp .)
    VIRGULA         reduce using rule 70 (menos_exp -> MENOS exp .)

  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]
  ! ASTERISCO       [ shift and go to state 154 ]
  ! BARRA           [ shift and go to state 155 ]
  ! MOD             [ shift and go to state 156 ]


state 160

    (71) mais_exp -> MAIS exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 71 (mais_exp -> MAIS exp .)
    OU              reduce using rule 71 (mais_exp -> MAIS exp .)
    MENOR           reduce using rule 71 (mais_exp -> MAIS exp .)
    MAIOR           reduce using rule 71 (mais_exp -> MAIS exp .)
    MENOR_IGUAL     reduce using rule 71 (mais_exp -> MAIS exp .)
    MAIOR_IGUAL     reduce using rule 71 (mais_exp -> MAIS exp .)
    IGUAL           reduce using rule 71 (mais_exp -> MAIS exp .)
    DIFERENTE       reduce using rule 71 (mais_exp -> MAIS exp .)
    MENOS           reduce using rule 71 (mais_exp -> MAIS exp .)
    MAIS            reduce using rule 71 (mais_exp -> MAIS exp .)
    ASTERISCO       reduce using rule 71 (mais_exp -> MAIS exp .)
    BARRA           reduce using rule 71 (mais_exp -> MAIS exp .)
    MOD             reduce using rule 71 (mais_exp -> MAIS exp .)
    PONTO_VIRGULA   reduce using rule 71 (mais_exp -> MAIS exp .)
    R_PARENTESE     reduce using rule 71 (mais_exp -> MAIS exp .)
    R_CHAVE         reduce using rule 71 (mais_exp -> MAIS exp .)
    ASPA_DUPLA      reduce using rule 71 (mais_exp -> MAIS exp .)
    ASPA_SIMPLES    reduce using rule 71 (mais_exp -> MAIS exp .)
    R_COCHETE       reduce using rule 71 (mais_exp -> MAIS exp .)
    CONST_STRING    reduce using rule 71 (mais_exp -> MAIS exp .)
    VIRGULA         reduce using rule 71 (mais_exp -> MAIS exp .)

  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]
  ! ASTERISCO       [ shift and go to state 154 ]
  ! BARRA           [ shift and go to state 155 ]
  ! MOD             [ shift and go to state 156 ]


state 161

    (72) asterisco_exp -> ASTERISCO exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    OU              reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    MENOR           reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    MAIOR           reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    MENOR_IGUAL     reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    MAIOR_IGUAL     reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    IGUAL           reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    DIFERENTE       reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    MENOS           reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    MAIS            reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    ASTERISCO       reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    BARRA           reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    MOD             reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    PONTO_VIRGULA   reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    R_PARENTESE     reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    R_CHAVE         reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    ASPA_DUPLA      reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    ASPA_SIMPLES    reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    R_COCHETE       reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    CONST_STRING    reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)
    VIRGULA         reduce using rule 72 (asterisco_exp -> ASTERISCO exp .)

  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]
  ! ASTERISCO       [ shift and go to state 154 ]
  ! BARRA           [ shift and go to state 155 ]
  ! MOD             [ shift and go to state 156 ]


state 162

    (73) negacao_exp -> NEGACAO exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    OU              reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    MENOR           reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    MAIOR           reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    MENOR_IGUAL     reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    MAIOR_IGUAL     reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    IGUAL           reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    DIFERENTE       reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    MENOS           reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    MAIS            reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    ASTERISCO       reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    BARRA           reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    MOD             reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    PONTO_VIRGULA   reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    R_PARENTESE     reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    R_CHAVE         reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    ASPA_DUPLA      reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    ASPA_SIMPLES    reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    R_COCHETE       reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    CONST_STRING    reduce using rule 73 (negacao_exp -> NEGACAO exp .)
    VIRGULA         reduce using rule 73 (negacao_exp -> NEGACAO exp .)

  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]
  ! ASTERISCO       [ shift and go to state 154 ]
  ! BARRA           [ shift and go to state 155 ]
  ! MOD             [ shift and go to state 156 ]


state 163

    (74) e_comercial_exp -> E_COMERCIAL exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    OU              reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    MENOR           reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    MAIOR           reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    MENOR_IGUAL     reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    MAIOR_IGUAL     reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    IGUAL           reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    DIFERENTE       reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    MENOS           reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    MAIS            reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    ASTERISCO       reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    BARRA           reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    MOD             reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    PONTO_VIRGULA   reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    R_PARENTESE     reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    R_CHAVE         reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    ASPA_DUPLA      reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    ASPA_SIMPLES    reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    R_COCHETE       reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    CONST_STRING    reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)
    VIRGULA         reduce using rule 74 (e_comercial_exp -> E_COMERCIAL exp .)

  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]
  ! ASTERISCO       [ shift and go to state 154 ]
  ! BARRA           [ shift and go to state 155 ]
  ! MOD             [ shift and go to state 156 ]


state 164

    (86) id_atribuicao_exp -> ID ATRIBUICAO . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 202
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 165

    (87) id_cochete_exp -> ID L_COCHETE . exp R_COCHETE
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 203
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 166

    (29) declaracao -> tipo pointer ID PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    stm                            shift and go to state 204
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 167

    (30) declaracao -> tipo pointer ID ATRIBUICAO . expression PONTO_VIRGULA stm
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 205
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 168

    (31) declaracao -> tipo pointer ID L_COCHETE . arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> tipo pointer ID L_COCHETE . arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> tipo pointer ID L_COCHETE . arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> tipo pointer ID L_COCHETE . arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (42) arg -> . expression
    (43) arg -> . lambda
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    R_COCHETE       reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    arg                            shift and go to state 206
    expression                     shift and go to state 130
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 169

    (39) equacao -> pointer ID L_COCHETE arg . R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> pointer ID L_COCHETE arg . R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm

    R_COCHETE       shift and go to state 207


state 170

    (41) equacao -> pointer ID ATRIBUICAO expression . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 208


state 171

    (130) condicional -> IF L_PARENTESE expression R_PARENTESE . stm
    (131) condicional -> IF L_PARENTESE expression R_PARENTESE . stm ELSE stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    stm                            shift and go to state 209
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 172

    (53) entrada -> SCANF L_PARENTESE expression_entrada R_PARENTESE . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 210


state 173

    (54) expression_entrada -> CONST_STRING VIRGULA . E_COMERCIAL ID expression_entrada

    E_COMERCIAL     shift and go to state 211


state 174

    (55) expression_entrada -> VIRGULA E_COMERCIAL . ID expression_entrada

    ID              shift and go to state 212


state 175

    (135) for -> FOR L_PARENTESE tipo ID . ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm

    ATRIBUICAO      shift and go to state 213


state 176

    (136) for -> FOR L_PARENTESE arg PONTO_VIRGULA . arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (42) arg -> . expression
    (43) arg -> . lambda
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    PONTO_VIRGULA   reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    arg                            shift and go to state 214
    expression                     shift and go to state 130
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 177

    (137) while -> WHILE L_PARENTESE expression R_PARENTESE . bloco stm
    (26) bloco -> . L_CHAVE stm R_CHAVE

    L_CHAVE         shift and go to state 8

    bloco                          shift and go to state 215

state 178

    (138) do_while -> DO bloco WHILE L_PARENTESE . expression R_PARENTESE PONTO_VIRGULA stm
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 216
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 179

    (48) mostrar1 -> PRINTF L_PARENTESE CONST_STRING R_PARENTESE . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 217


state 180

    (50) expression_mostrar -> CONST_STRING VIRGULA . expression expression_mostrar
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 218
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 181

    (49) mostrar2 -> PRINTF L_PARENTESE expression_mostrar R_PARENTESE . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 219


state 182

    (51) expression_mostrar -> VIRGULA expression .

    R_PARENTESE     reduce using rule 51 (expression_mostrar -> VIRGULA expression .)


state 183

    (129) extras -> L_PARENTESE tipo R_PARENTESE . exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_PARENTESE     shift and go to state 139
    L_CHAVE         shift and go to state 62

    exp                            shift and go to state 220
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 184

    (88) parentese_exp -> L_PARENTESE exp R_PARENTESE .

    AND             reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    OU              reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    MENOR           reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    MAIOR           reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    MENOR_IGUAL     reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    MAIOR_IGUAL     reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    IGUAL           reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    DIFERENTE       reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    MENOS           reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    MAIS            reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    ASTERISCO       reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    BARRA           reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    MOD             reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    PONTO_VIRGULA   reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    R_PARENTESE     reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    R_CHAVE         reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    ASPA_DUPLA      reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    ASPA_SIMPLES    reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    R_COCHETE       reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    CONST_STRING    reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)
    VIRGULA         reduce using rule 88 (parentese_exp -> L_PARENTESE exp R_PARENTESE .)


state 185

    (89) chave_exp -> L_CHAVE exp R_CHAVE .

    AND             reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    OU              reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    MENOR           reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    MAIOR           reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    MENOR_IGUAL     reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    MAIOR_IGUAL     reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    IGUAL           reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    DIFERENTE       reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    MENOS           reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    MAIS            reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    ASTERISCO       reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    BARRA           reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    MOD             reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    PONTO_VIRGULA   reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    R_PARENTESE     reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    R_CHAVE         reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    ASPA_DUPLA      reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    ASPA_SIMPLES    reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    R_COCHETE       reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    CONST_STRING    reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)
    VIRGULA         reduce using rule 89 (chave_exp -> L_CHAVE exp R_CHAVE .)


state 186

    (1) main -> INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVE .

    $end            reduce using rule 1 (main -> INT MAIN L_PARENTESE R_PARENTESE L_CHAVE stm RETURN expression PONTO_VIRGULA R_CHAVE .)


state 187

    (57) exp_and -> exp AND exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 57 (exp_and -> exp AND exp .)
    OU              reduce using rule 57 (exp_and -> exp AND exp .)
    PONTO_VIRGULA   reduce using rule 57 (exp_and -> exp AND exp .)
    R_PARENTESE     reduce using rule 57 (exp_and -> exp AND exp .)
    R_CHAVE         reduce using rule 57 (exp_and -> exp AND exp .)
    ASPA_DUPLA      reduce using rule 57 (exp_and -> exp AND exp .)
    ASPA_SIMPLES    reduce using rule 57 (exp_and -> exp AND exp .)
    R_COCHETE       reduce using rule 57 (exp_and -> exp AND exp .)
    CONST_STRING    reduce using rule 57 (exp_and -> exp AND exp .)
    VIRGULA         reduce using rule 57 (exp_and -> exp AND exp .)
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! MENOR           [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! MAIOR           [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! MENOR_IGUAL     [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! MAIOR_IGUAL     [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! IGUAL           [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! DIFERENTE       [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! MENOS           [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! MAIS            [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! ASTERISCO       [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! BARRA           [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! MOD             [ reduce using rule 57 (exp_and -> exp AND exp .) ]
  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]


state 188

    (58) exp_ou -> exp OU exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    OU              reduce using rule 58 (exp_ou -> exp OU exp .)
    PONTO_VIRGULA   reduce using rule 58 (exp_ou -> exp OU exp .)
    R_PARENTESE     reduce using rule 58 (exp_ou -> exp OU exp .)
    R_CHAVE         reduce using rule 58 (exp_ou -> exp OU exp .)
    ASPA_DUPLA      reduce using rule 58 (exp_ou -> exp OU exp .)
    ASPA_SIMPLES    reduce using rule 58 (exp_ou -> exp OU exp .)
    R_COCHETE       reduce using rule 58 (exp_ou -> exp OU exp .)
    CONST_STRING    reduce using rule 58 (exp_ou -> exp OU exp .)
    VIRGULA         reduce using rule 58 (exp_ou -> exp OU exp .)
    AND             shift and go to state 144
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! AND             [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! MENOR           [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! MAIOR           [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! MENOR_IGUAL     [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! MAIOR_IGUAL     [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! IGUAL           [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! DIFERENTE       [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! MENOS           [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! MAIS            [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! ASTERISCO       [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! BARRA           [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! MOD             [ reduce using rule 58 (exp_ou -> exp OU exp .) ]
  ! OU              [ shift and go to state 145 ]


state 189

    (59) exp_menor -> exp MENOR exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 59 (exp_menor -> exp MENOR exp .)
    OU              reduce using rule 59 (exp_menor -> exp MENOR exp .)
    MENOR           reduce using rule 59 (exp_menor -> exp MENOR exp .)
    MAIOR           reduce using rule 59 (exp_menor -> exp MENOR exp .)
    MENOR_IGUAL     reduce using rule 59 (exp_menor -> exp MENOR exp .)
    MAIOR_IGUAL     reduce using rule 59 (exp_menor -> exp MENOR exp .)
    IGUAL           reduce using rule 59 (exp_menor -> exp MENOR exp .)
    DIFERENTE       reduce using rule 59 (exp_menor -> exp MENOR exp .)
    PONTO_VIRGULA   reduce using rule 59 (exp_menor -> exp MENOR exp .)
    R_PARENTESE     reduce using rule 59 (exp_menor -> exp MENOR exp .)
    R_CHAVE         reduce using rule 59 (exp_menor -> exp MENOR exp .)
    ASPA_DUPLA      reduce using rule 59 (exp_menor -> exp MENOR exp .)
    ASPA_SIMPLES    reduce using rule 59 (exp_menor -> exp MENOR exp .)
    R_COCHETE       reduce using rule 59 (exp_menor -> exp MENOR exp .)
    CONST_STRING    reduce using rule 59 (exp_menor -> exp MENOR exp .)
    VIRGULA         reduce using rule 59 (exp_menor -> exp MENOR exp .)
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! MENOS           [ reduce using rule 59 (exp_menor -> exp MENOR exp .) ]
  ! MAIS            [ reduce using rule 59 (exp_menor -> exp MENOR exp .) ]
  ! ASTERISCO       [ reduce using rule 59 (exp_menor -> exp MENOR exp .) ]
  ! BARRA           [ reduce using rule 59 (exp_menor -> exp MENOR exp .) ]
  ! MOD             [ reduce using rule 59 (exp_menor -> exp MENOR exp .) ]
  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]


state 190

    (60) exp_maior -> exp MAIOR exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    OU              reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    MENOR           reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    MAIOR           reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    MENOR_IGUAL     reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    MAIOR_IGUAL     reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    IGUAL           reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    DIFERENTE       reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    PONTO_VIRGULA   reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    R_PARENTESE     reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    R_CHAVE         reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    ASPA_DUPLA      reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    ASPA_SIMPLES    reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    R_COCHETE       reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    CONST_STRING    reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    VIRGULA         reduce using rule 60 (exp_maior -> exp MAIOR exp .)
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! MENOS           [ reduce using rule 60 (exp_maior -> exp MAIOR exp .) ]
  ! MAIS            [ reduce using rule 60 (exp_maior -> exp MAIOR exp .) ]
  ! ASTERISCO       [ reduce using rule 60 (exp_maior -> exp MAIOR exp .) ]
  ! BARRA           [ reduce using rule 60 (exp_maior -> exp MAIOR exp .) ]
  ! MOD             [ reduce using rule 60 (exp_maior -> exp MAIOR exp .) ]
  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]


state 191

    (61) exp_menor_igual -> exp MENOR_IGUAL exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    OU              reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    MENOR           reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    MAIOR           reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    MENOR_IGUAL     reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    MAIOR_IGUAL     reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    IGUAL           reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    DIFERENTE       reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    PONTO_VIRGULA   reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    R_PARENTESE     reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    R_CHAVE         reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    ASPA_DUPLA      reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    ASPA_SIMPLES    reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    R_COCHETE       reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    CONST_STRING    reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    VIRGULA         reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .)
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! MENOS           [ reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .) ]
  ! MAIS            [ reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .) ]
  ! ASTERISCO       [ reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .) ]
  ! BARRA           [ reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .) ]
  ! MOD             [ reduce using rule 61 (exp_menor_igual -> exp MENOR_IGUAL exp .) ]
  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]


state 192

    (62) exp_maior_igual -> exp MAIOR_IGUAL exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    OU              reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    MENOR           reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    MAIOR           reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    MENOR_IGUAL     reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    MAIOR_IGUAL     reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    IGUAL           reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    DIFERENTE       reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    PONTO_VIRGULA   reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    R_PARENTESE     reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    R_CHAVE         reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    ASPA_DUPLA      reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    ASPA_SIMPLES    reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    R_COCHETE       reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    CONST_STRING    reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    VIRGULA         reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .)
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! MENOS           [ reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .) ]
  ! MAIS            [ reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .) ]
  ! ASTERISCO       [ reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .) ]
  ! BARRA           [ reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .) ]
  ! MOD             [ reduce using rule 62 (exp_maior_igual -> exp MAIOR_IGUAL exp .) ]
  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]


state 193

    (63) exp_igual -> exp IGUAL exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    OU              reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    IGUAL           reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    DIFERENTE       reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    PONTO_VIRGULA   reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    R_PARENTESE     reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    R_CHAVE         reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    ASPA_DUPLA      reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    ASPA_SIMPLES    reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    R_COCHETE       reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    CONST_STRING    reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    VIRGULA         reduce using rule 63 (exp_igual -> exp IGUAL exp .)
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! MENOR           [ reduce using rule 63 (exp_igual -> exp IGUAL exp .) ]
  ! MAIOR           [ reduce using rule 63 (exp_igual -> exp IGUAL exp .) ]
  ! MENOR_IGUAL     [ reduce using rule 63 (exp_igual -> exp IGUAL exp .) ]
  ! MAIOR_IGUAL     [ reduce using rule 63 (exp_igual -> exp IGUAL exp .) ]
  ! MENOS           [ reduce using rule 63 (exp_igual -> exp IGUAL exp .) ]
  ! MAIS            [ reduce using rule 63 (exp_igual -> exp IGUAL exp .) ]
  ! ASTERISCO       [ reduce using rule 63 (exp_igual -> exp IGUAL exp .) ]
  ! BARRA           [ reduce using rule 63 (exp_igual -> exp IGUAL exp .) ]
  ! MOD             [ reduce using rule 63 (exp_igual -> exp IGUAL exp .) ]
  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]


state 194

    (64) exp_diferente -> exp DIFERENTE exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    OU              reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    IGUAL           reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    DIFERENTE       reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    PONTO_VIRGULA   reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    R_PARENTESE     reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    R_CHAVE         reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    ASPA_DUPLA      reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    ASPA_SIMPLES    reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    R_COCHETE       reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    CONST_STRING    reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    VIRGULA         reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .)
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! MENOR           [ reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .) ]
  ! MAIOR           [ reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .) ]
  ! MENOR_IGUAL     [ reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .) ]
  ! MAIOR_IGUAL     [ reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .) ]
  ! MENOS           [ reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .) ]
  ! MAIS            [ reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .) ]
  ! ASTERISCO       [ reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .) ]
  ! BARRA           [ reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .) ]
  ! MOD             [ reduce using rule 64 (exp_diferente -> exp DIFERENTE exp .) ]
  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]


state 195

    (65) exp_menos -> exp MENOS exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 65 (exp_menos -> exp MENOS exp .)
    OU              reduce using rule 65 (exp_menos -> exp MENOS exp .)
    MENOR           reduce using rule 65 (exp_menos -> exp MENOS exp .)
    MAIOR           reduce using rule 65 (exp_menos -> exp MENOS exp .)
    MENOR_IGUAL     reduce using rule 65 (exp_menos -> exp MENOS exp .)
    MAIOR_IGUAL     reduce using rule 65 (exp_menos -> exp MENOS exp .)
    IGUAL           reduce using rule 65 (exp_menos -> exp MENOS exp .)
    DIFERENTE       reduce using rule 65 (exp_menos -> exp MENOS exp .)
    MENOS           reduce using rule 65 (exp_menos -> exp MENOS exp .)
    MAIS            reduce using rule 65 (exp_menos -> exp MENOS exp .)
    PONTO_VIRGULA   reduce using rule 65 (exp_menos -> exp MENOS exp .)
    R_PARENTESE     reduce using rule 65 (exp_menos -> exp MENOS exp .)
    R_CHAVE         reduce using rule 65 (exp_menos -> exp MENOS exp .)
    ASPA_DUPLA      reduce using rule 65 (exp_menos -> exp MENOS exp .)
    ASPA_SIMPLES    reduce using rule 65 (exp_menos -> exp MENOS exp .)
    R_COCHETE       reduce using rule 65 (exp_menos -> exp MENOS exp .)
    CONST_STRING    reduce using rule 65 (exp_menos -> exp MENOS exp .)
    VIRGULA         reduce using rule 65 (exp_menos -> exp MENOS exp .)
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! ASTERISCO       [ reduce using rule 65 (exp_menos -> exp MENOS exp .) ]
  ! BARRA           [ reduce using rule 65 (exp_menos -> exp MENOS exp .) ]
  ! MOD             [ reduce using rule 65 (exp_menos -> exp MENOS exp .) ]
  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]


state 196

    (66) exp_mais -> exp MAIS exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 66 (exp_mais -> exp MAIS exp .)
    OU              reduce using rule 66 (exp_mais -> exp MAIS exp .)
    MENOR           reduce using rule 66 (exp_mais -> exp MAIS exp .)
    MAIOR           reduce using rule 66 (exp_mais -> exp MAIS exp .)
    MENOR_IGUAL     reduce using rule 66 (exp_mais -> exp MAIS exp .)
    MAIOR_IGUAL     reduce using rule 66 (exp_mais -> exp MAIS exp .)
    IGUAL           reduce using rule 66 (exp_mais -> exp MAIS exp .)
    DIFERENTE       reduce using rule 66 (exp_mais -> exp MAIS exp .)
    MENOS           reduce using rule 66 (exp_mais -> exp MAIS exp .)
    MAIS            reduce using rule 66 (exp_mais -> exp MAIS exp .)
    PONTO_VIRGULA   reduce using rule 66 (exp_mais -> exp MAIS exp .)
    R_PARENTESE     reduce using rule 66 (exp_mais -> exp MAIS exp .)
    R_CHAVE         reduce using rule 66 (exp_mais -> exp MAIS exp .)
    ASPA_DUPLA      reduce using rule 66 (exp_mais -> exp MAIS exp .)
    ASPA_SIMPLES    reduce using rule 66 (exp_mais -> exp MAIS exp .)
    R_COCHETE       reduce using rule 66 (exp_mais -> exp MAIS exp .)
    CONST_STRING    reduce using rule 66 (exp_mais -> exp MAIS exp .)
    VIRGULA         reduce using rule 66 (exp_mais -> exp MAIS exp .)
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156

  ! ASTERISCO       [ reduce using rule 66 (exp_mais -> exp MAIS exp .) ]
  ! BARRA           [ reduce using rule 66 (exp_mais -> exp MAIS exp .) ]
  ! MOD             [ reduce using rule 66 (exp_mais -> exp MAIS exp .) ]
  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]


state 197

    (67) exp_asterisco -> exp ASTERISCO exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    OU              reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    MENOR           reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    MAIOR           reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    MENOR_IGUAL     reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    MAIOR_IGUAL     reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    IGUAL           reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    DIFERENTE       reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    MENOS           reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    MAIS            reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    ASTERISCO       reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    BARRA           reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    MOD             reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    PONTO_VIRGULA   reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    R_PARENTESE     reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    R_CHAVE         reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    ASPA_DUPLA      reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    ASPA_SIMPLES    reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    R_COCHETE       reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    CONST_STRING    reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)
    VIRGULA         reduce using rule 67 (exp_asterisco -> exp ASTERISCO exp .)

  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]
  ! ASTERISCO       [ shift and go to state 154 ]
  ! BARRA           [ shift and go to state 155 ]
  ! MOD             [ shift and go to state 156 ]


state 198

    (68) exp_barra -> exp BARRA exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 68 (exp_barra -> exp BARRA exp .)
    OU              reduce using rule 68 (exp_barra -> exp BARRA exp .)
    MENOR           reduce using rule 68 (exp_barra -> exp BARRA exp .)
    MAIOR           reduce using rule 68 (exp_barra -> exp BARRA exp .)
    MENOR_IGUAL     reduce using rule 68 (exp_barra -> exp BARRA exp .)
    MAIOR_IGUAL     reduce using rule 68 (exp_barra -> exp BARRA exp .)
    IGUAL           reduce using rule 68 (exp_barra -> exp BARRA exp .)
    DIFERENTE       reduce using rule 68 (exp_barra -> exp BARRA exp .)
    MENOS           reduce using rule 68 (exp_barra -> exp BARRA exp .)
    MAIS            reduce using rule 68 (exp_barra -> exp BARRA exp .)
    ASTERISCO       reduce using rule 68 (exp_barra -> exp BARRA exp .)
    BARRA           reduce using rule 68 (exp_barra -> exp BARRA exp .)
    MOD             reduce using rule 68 (exp_barra -> exp BARRA exp .)
    PONTO_VIRGULA   reduce using rule 68 (exp_barra -> exp BARRA exp .)
    R_PARENTESE     reduce using rule 68 (exp_barra -> exp BARRA exp .)
    R_CHAVE         reduce using rule 68 (exp_barra -> exp BARRA exp .)
    ASPA_DUPLA      reduce using rule 68 (exp_barra -> exp BARRA exp .)
    ASPA_SIMPLES    reduce using rule 68 (exp_barra -> exp BARRA exp .)
    R_COCHETE       reduce using rule 68 (exp_barra -> exp BARRA exp .)
    CONST_STRING    reduce using rule 68 (exp_barra -> exp BARRA exp .)
    VIRGULA         reduce using rule 68 (exp_barra -> exp BARRA exp .)

  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]
  ! ASTERISCO       [ shift and go to state 154 ]
  ! BARRA           [ shift and go to state 155 ]
  ! MOD             [ shift and go to state 156 ]


state 199

    (69) exp_mod -> exp MOD exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 69 (exp_mod -> exp MOD exp .)
    OU              reduce using rule 69 (exp_mod -> exp MOD exp .)
    MENOR           reduce using rule 69 (exp_mod -> exp MOD exp .)
    MAIOR           reduce using rule 69 (exp_mod -> exp MOD exp .)
    MENOR_IGUAL     reduce using rule 69 (exp_mod -> exp MOD exp .)
    MAIOR_IGUAL     reduce using rule 69 (exp_mod -> exp MOD exp .)
    IGUAL           reduce using rule 69 (exp_mod -> exp MOD exp .)
    DIFERENTE       reduce using rule 69 (exp_mod -> exp MOD exp .)
    MENOS           reduce using rule 69 (exp_mod -> exp MOD exp .)
    MAIS            reduce using rule 69 (exp_mod -> exp MOD exp .)
    ASTERISCO       reduce using rule 69 (exp_mod -> exp MOD exp .)
    BARRA           reduce using rule 69 (exp_mod -> exp MOD exp .)
    MOD             reduce using rule 69 (exp_mod -> exp MOD exp .)
    PONTO_VIRGULA   reduce using rule 69 (exp_mod -> exp MOD exp .)
    R_PARENTESE     reduce using rule 69 (exp_mod -> exp MOD exp .)
    R_CHAVE         reduce using rule 69 (exp_mod -> exp MOD exp .)
    ASPA_DUPLA      reduce using rule 69 (exp_mod -> exp MOD exp .)
    ASPA_SIMPLES    reduce using rule 69 (exp_mod -> exp MOD exp .)
    R_COCHETE       reduce using rule 69 (exp_mod -> exp MOD exp .)
    CONST_STRING    reduce using rule 69 (exp_mod -> exp MOD exp .)
    VIRGULA         reduce using rule 69 (exp_mod -> exp MOD exp .)

  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]
  ! ASTERISCO       [ shift and go to state 154 ]
  ! BARRA           [ shift and go to state 155 ]
  ! MOD             [ shift and go to state 156 ]


state 200

    (127) aspa_dupla_exp -> ASPA_DUPLA exp ASPA_DUPLA .

    PONTO_VIRGULA   reduce using rule 127 (aspa_dupla_exp -> ASPA_DUPLA exp ASPA_DUPLA .)
    R_PARENTESE     reduce using rule 127 (aspa_dupla_exp -> ASPA_DUPLA exp ASPA_DUPLA .)
    R_COCHETE       reduce using rule 127 (aspa_dupla_exp -> ASPA_DUPLA exp ASPA_DUPLA .)
    CONST_STRING    reduce using rule 127 (aspa_dupla_exp -> ASPA_DUPLA exp ASPA_DUPLA .)
    VIRGULA         reduce using rule 127 (aspa_dupla_exp -> ASPA_DUPLA exp ASPA_DUPLA .)
    R_CHAVE         reduce using rule 127 (aspa_dupla_exp -> ASPA_DUPLA exp ASPA_DUPLA .)


state 201

    (128) aspa_simples_exp -> ASPA_SIMPLES exp ASPA_SIMPLES .

    PONTO_VIRGULA   reduce using rule 128 (aspa_simples_exp -> ASPA_SIMPLES exp ASPA_SIMPLES .)
    R_PARENTESE     reduce using rule 128 (aspa_simples_exp -> ASPA_SIMPLES exp ASPA_SIMPLES .)
    R_COCHETE       reduce using rule 128 (aspa_simples_exp -> ASPA_SIMPLES exp ASPA_SIMPLES .)
    CONST_STRING    reduce using rule 128 (aspa_simples_exp -> ASPA_SIMPLES exp ASPA_SIMPLES .)
    VIRGULA         reduce using rule 128 (aspa_simples_exp -> ASPA_SIMPLES exp ASPA_SIMPLES .)
    R_CHAVE         reduce using rule 128 (aspa_simples_exp -> ASPA_SIMPLES exp ASPA_SIMPLES .)


state 202

    (86) id_atribuicao_exp -> ID ATRIBUICAO exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    AND             reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    OU              reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    MENOR           reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    MAIOR           reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    MENOR_IGUAL     reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    MAIOR_IGUAL     reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    IGUAL           reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    DIFERENTE       reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    MENOS           reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    MAIS            reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    ASTERISCO       reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    BARRA           reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    MOD             reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    PONTO_VIRGULA   reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    R_PARENTESE     reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    R_CHAVE         reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    ASPA_DUPLA      reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    ASPA_SIMPLES    reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    R_COCHETE       reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    CONST_STRING    reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)
    VIRGULA         reduce using rule 86 (id_atribuicao_exp -> ID ATRIBUICAO exp .)

  ! AND             [ shift and go to state 144 ]
  ! OU              [ shift and go to state 145 ]
  ! MENOR           [ shift and go to state 146 ]
  ! MAIOR           [ shift and go to state 147 ]
  ! MENOR_IGUAL     [ shift and go to state 148 ]
  ! MAIOR_IGUAL     [ shift and go to state 149 ]
  ! IGUAL           [ shift and go to state 150 ]
  ! DIFERENTE       [ shift and go to state 151 ]
  ! MENOS           [ shift and go to state 152 ]
  ! MAIS            [ shift and go to state 153 ]
  ! ASTERISCO       [ shift and go to state 154 ]
  ! BARRA           [ shift and go to state 155 ]
  ! MOD             [ shift and go to state 156 ]


state 203

    (87) id_cochete_exp -> ID L_COCHETE exp . R_COCHETE
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    R_COCHETE       shift and go to state 221
    AND             shift and go to state 144
    OU              shift and go to state 145
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156


state 204

    (29) declaracao -> tipo pointer ID PONTO_VIRGULA stm .

    RETURN          reduce using rule 29 (declaracao -> tipo pointer ID PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 29 (declaracao -> tipo pointer ID PONTO_VIRGULA stm .)
    ELSE            reduce using rule 29 (declaracao -> tipo pointer ID PONTO_VIRGULA stm .)


state 205

    (30) declaracao -> tipo pointer ID ATRIBUICAO expression . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 222


state 206

    (31) declaracao -> tipo pointer ID L_COCHETE arg . R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> tipo pointer ID L_COCHETE arg . R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> tipo pointer ID L_COCHETE arg . R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> tipo pointer ID L_COCHETE arg . R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm

    R_COCHETE       shift and go to state 223


state 207

    (39) equacao -> pointer ID L_COCHETE arg R_COCHETE . ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> pointer ID L_COCHETE arg R_COCHETE . L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm

    ATRIBUICAO      shift and go to state 225
    L_COCHETE       shift and go to state 224


state 208

    (41) equacao -> pointer ID ATRIBUICAO expression PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    pointer                        shift and go to state 21
    stm                            shift and go to state 226
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 209

    (130) condicional -> IF L_PARENTESE expression R_PARENTESE stm .
    (131) condicional -> IF L_PARENTESE expression R_PARENTESE stm . ELSE stm

    RETURN          reduce using rule 130 (condicional -> IF L_PARENTESE expression R_PARENTESE stm .)
    R_CHAVE         reduce using rule 130 (condicional -> IF L_PARENTESE expression R_PARENTESE stm .)
    ELSE            shift and go to state 227

  ! ELSE            [ reduce using rule 130 (condicional -> IF L_PARENTESE expression R_PARENTESE stm .) ]


state 210

    (53) entrada -> SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    stm                            shift and go to state 228
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 211

    (54) expression_entrada -> CONST_STRING VIRGULA E_COMERCIAL . ID expression_entrada

    ID              shift and go to state 229


state 212

    (55) expression_entrada -> VIRGULA E_COMERCIAL ID . expression_entrada
    (54) expression_entrada -> . CONST_STRING VIRGULA E_COMERCIAL ID expression_entrada
    (55) expression_entrada -> . VIRGULA E_COMERCIAL ID expression_entrada
    (56) expression_entrada -> . lambda
    (13) lambda -> .

    CONST_STRING    shift and go to state 124
    VIRGULA         shift and go to state 125
    R_PARENTESE     reduce using rule 13 (lambda -> .)

    expression_entrada             shift and go to state 230
    lambda                         shift and go to state 126

state 213

    (135) for -> FOR L_PARENTESE tipo ID ATRIBUICAO . expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 231
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 214

    (136) for -> FOR L_PARENTESE arg PONTO_VIRGULA arg . PONTO_VIRGULA arg R_PARENTESE bloco stm

    PONTO_VIRGULA   shift and go to state 232


state 215

    (137) while -> WHILE L_PARENTESE expression R_PARENTESE bloco . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    bloco                          shift and go to state 31
    stm                            shift and go to state 233
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 216

    (138) do_while -> DO bloco WHILE L_PARENTESE expression . R_PARENTESE PONTO_VIRGULA stm

    R_PARENTESE     shift and go to state 234


state 217

    (48) mostrar1 -> PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    stm                            shift and go to state 235
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 218

    (50) expression_mostrar -> CONST_STRING VIRGULA expression . expression_mostrar
    (50) expression_mostrar -> . CONST_STRING VIRGULA expression expression_mostrar
    (51) expression_mostrar -> . VIRGULA expression
    (52) expression_mostrar -> . lambda
    (13) lambda -> .

    CONST_STRING    shift and go to state 236
    VIRGULA         shift and go to state 137
    R_PARENTESE     reduce using rule 13 (lambda -> .)

    expression_mostrar             shift and go to state 237
    lambda                         shift and go to state 138

state 219

    (49) mostrar2 -> PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    stm                            shift and go to state 238
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 220

    (129) extras -> L_PARENTESE tipo R_PARENTESE exp .
    (57) exp_and -> exp . AND exp
    (58) exp_ou -> exp . OU exp
    (59) exp_menor -> exp . MENOR exp
    (60) exp_maior -> exp . MAIOR exp
    (61) exp_menor_igual -> exp . MENOR_IGUAL exp
    (62) exp_maior_igual -> exp . MAIOR_IGUAL exp
    (63) exp_igual -> exp . IGUAL exp
    (64) exp_diferente -> exp . DIFERENTE exp
    (65) exp_menos -> exp . MENOS exp
    (66) exp_mais -> exp . MAIS exp
    (67) exp_asterisco -> exp . ASTERISCO exp
    (68) exp_barra -> exp . BARRA exp
    (69) exp_mod -> exp . MOD exp

    PONTO_VIRGULA   reduce using rule 129 (extras -> L_PARENTESE tipo R_PARENTESE exp .)
    R_PARENTESE     reduce using rule 129 (extras -> L_PARENTESE tipo R_PARENTESE exp .)
    R_COCHETE       reduce using rule 129 (extras -> L_PARENTESE tipo R_PARENTESE exp .)
    CONST_STRING    reduce using rule 129 (extras -> L_PARENTESE tipo R_PARENTESE exp .)
    VIRGULA         reduce using rule 129 (extras -> L_PARENTESE tipo R_PARENTESE exp .)
    R_CHAVE         reduce using rule 129 (extras -> L_PARENTESE tipo R_PARENTESE exp .)
    AND             shift and go to state 144
    OU              shift and go to state 145
    MENOR           shift and go to state 146
    MAIOR           shift and go to state 147
    MENOR_IGUAL     shift and go to state 148
    MAIOR_IGUAL     shift and go to state 149
    IGUAL           shift and go to state 150
    DIFERENTE       shift and go to state 151
    MENOS           shift and go to state 152
    MAIS            shift and go to state 153
    ASTERISCO       shift and go to state 154
    BARRA           shift and go to state 155
    MOD             shift and go to state 156


state 221

    (87) id_cochete_exp -> ID L_COCHETE exp R_COCHETE .

    AND             reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    OU              reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    MENOR           reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    MAIOR           reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    MENOR_IGUAL     reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    MAIOR_IGUAL     reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    IGUAL           reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    DIFERENTE       reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    MENOS           reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    MAIS            reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    ASTERISCO       reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    BARRA           reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    MOD             reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    PONTO_VIRGULA   reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    R_PARENTESE     reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    R_CHAVE         reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    ASPA_DUPLA      reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    ASPA_SIMPLES    reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    R_COCHETE       reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    CONST_STRING    reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)
    VIRGULA         reduce using rule 87 (id_cochete_exp -> ID L_COCHETE exp R_COCHETE .)


state 222

    (30) declaracao -> tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    stm                            shift and go to state 239
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 223

    (31) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE . PONTO_VIRGULA stm
    (32) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE . ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE . L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE . L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 241
    ATRIBUICAO      shift and go to state 242
    L_COCHETE       shift and go to state 240


state 224

    (40) equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE . arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (42) arg -> . expression
    (43) arg -> . lambda
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    R_COCHETE       reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    arg                            shift and go to state 243
    expression                     shift and go to state 130
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 225

    (39) equacao -> pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO . expression PONTO_VIRGULA stm
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 244
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 226

    (41) equacao -> pointer ID ATRIBUICAO expression PONTO_VIRGULA stm .

    RETURN          reduce using rule 41 (equacao -> pointer ID ATRIBUICAO expression PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 41 (equacao -> pointer ID ATRIBUICAO expression PONTO_VIRGULA stm .)
    ELSE            reduce using rule 41 (equacao -> pointer ID ATRIBUICAO expression PONTO_VIRGULA stm .)


state 227

    (131) condicional -> IF L_PARENTESE expression R_PARENTESE stm ELSE . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    stm                            shift and go to state 245
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 228

    (53) entrada -> SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm .

    RETURN          reduce using rule 53 (entrada -> SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 53 (entrada -> SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm .)
    ELSE            reduce using rule 53 (entrada -> SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm .)


state 229

    (54) expression_entrada -> CONST_STRING VIRGULA E_COMERCIAL ID . expression_entrada
    (54) expression_entrada -> . CONST_STRING VIRGULA E_COMERCIAL ID expression_entrada
    (55) expression_entrada -> . VIRGULA E_COMERCIAL ID expression_entrada
    (56) expression_entrada -> . lambda
    (13) lambda -> .

    CONST_STRING    shift and go to state 124
    VIRGULA         shift and go to state 125
    R_PARENTESE     reduce using rule 13 (lambda -> .)

    expression_entrada             shift and go to state 246
    lambda                         shift and go to state 126

state 230

    (55) expression_entrada -> VIRGULA E_COMERCIAL ID expression_entrada .

    R_PARENTESE     reduce using rule 55 (expression_entrada -> VIRGULA E_COMERCIAL ID expression_entrada .)


state 231

    (135) for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression . PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm

    PONTO_VIRGULA   shift and go to state 247


state 232

    (136) for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA . arg R_PARENTESE bloco stm
    (42) arg -> . expression
    (43) arg -> . lambda
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    R_PARENTESE     reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    arg                            shift and go to state 248
    expression                     shift and go to state 130
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 233

    (137) while -> WHILE L_PARENTESE expression R_PARENTESE bloco stm .

    RETURN          reduce using rule 137 (while -> WHILE L_PARENTESE expression R_PARENTESE bloco stm .)
    R_CHAVE         reduce using rule 137 (while -> WHILE L_PARENTESE expression R_PARENTESE bloco stm .)
    ELSE            reduce using rule 137 (while -> WHILE L_PARENTESE expression R_PARENTESE bloco stm .)


state 234

    (138) do_while -> DO bloco WHILE L_PARENTESE expression R_PARENTESE . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 249


state 235

    (48) mostrar1 -> PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm .

    RETURN          reduce using rule 48 (mostrar1 -> PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 48 (mostrar1 -> PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm .)
    ELSE            reduce using rule 48 (mostrar1 -> PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm .)


state 236

    (50) expression_mostrar -> CONST_STRING . VIRGULA expression expression_mostrar

    VIRGULA         shift and go to state 180


state 237

    (50) expression_mostrar -> CONST_STRING VIRGULA expression expression_mostrar .

    R_PARENTESE     reduce using rule 50 (expression_mostrar -> CONST_STRING VIRGULA expression expression_mostrar .)


state 238

    (49) mostrar2 -> PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm .

    RETURN          reduce using rule 49 (mostrar2 -> PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 49 (mostrar2 -> PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm .)
    ELSE            reduce using rule 49 (mostrar2 -> PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm .)


state 239

    (30) declaracao -> tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm .

    RETURN          reduce using rule 30 (declaracao -> tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 30 (declaracao -> tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm .)
    ELSE            reduce using rule 30 (declaracao -> tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm .)


state 240

    (33) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE . arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE . arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (42) arg -> . expression
    (43) arg -> . lambda
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    R_COCHETE       reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    arg                            shift and go to state 250
    expression                     shift and go to state 130
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 241

    (31) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    stm                            shift and go to state 251
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 242

    (32) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO . atribuicao_mat PONTO_VIRGULA stm
    (37) atribuicao_mat -> . L_CHAVE atribuicao_vet R_CHAVE VIRGULA atribuicao_mat
    (38) atribuicao_mat -> . L_CHAVE atribuicao_vet R_CHAVE

    L_CHAVE         shift and go to state 253

    atribuicao_mat                 shift and go to state 252

state 243

    (40) equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg . R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm

    R_COCHETE       shift and go to state 254


state 244

    (39) equacao -> pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 255


state 245

    (131) condicional -> IF L_PARENTESE expression R_PARENTESE stm ELSE stm .

    RETURN          reduce using rule 131 (condicional -> IF L_PARENTESE expression R_PARENTESE stm ELSE stm .)
    R_CHAVE         reduce using rule 131 (condicional -> IF L_PARENTESE expression R_PARENTESE stm ELSE stm .)
    ELSE            reduce using rule 131 (condicional -> IF L_PARENTESE expression R_PARENTESE stm ELSE stm .)


state 246

    (54) expression_entrada -> CONST_STRING VIRGULA E_COMERCIAL ID expression_entrada .

    R_PARENTESE     reduce using rule 54 (expression_entrada -> CONST_STRING VIRGULA E_COMERCIAL ID expression_entrada .)


state 247

    (135) for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA . arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (42) arg -> . expression
    (43) arg -> . lambda
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    PONTO_VIRGULA   reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 130
    arg                            shift and go to state 256
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 248

    (136) for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg . R_PARENTESE bloco stm

    R_PARENTESE     shift and go to state 257


state 249

    (138) do_while -> DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    bloco                          shift and go to state 31
    stm                            shift and go to state 258
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 250

    (33) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg . R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg . R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm

    R_COCHETE       shift and go to state 259


state 251

    (31) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm .

    RETURN          reduce using rule 31 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 31 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm .)
    ELSE            reduce using rule 31 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm .)


state 252

    (32) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 260


state 253

    (37) atribuicao_mat -> L_CHAVE . atribuicao_vet R_CHAVE VIRGULA atribuicao_mat
    (38) atribuicao_mat -> L_CHAVE . atribuicao_vet R_CHAVE
    (35) atribuicao_vet -> . expression VIRGULA atribuicao_vet
    (36) atribuicao_vet -> . expression
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    atribuicao_vet                 shift and go to state 261
    expression                     shift and go to state 262
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 254

    (40) equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE . more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (44) more_arg -> . more_arg L_COCHETE arg R_COCHETE
    (45) more_arg -> . lambda
    (13) lambda -> .

    ATRIBUICAO      reduce using rule 13 (lambda -> .)
    L_COCHETE       reduce using rule 13 (lambda -> .)

    more_arg                       shift and go to state 263
    lambda                         shift and go to state 264

state 255

    (39) equacao -> pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    pointer                        shift and go to state 21
    stm                            shift and go to state 265
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 256

    (135) for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg . PONTO_VIRGULA arg R_PARENTESE bloco stm

    PONTO_VIRGULA   shift and go to state 266


state 257

    (136) for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE . bloco stm
    (26) bloco -> . L_CHAVE stm R_CHAVE

    L_CHAVE         shift and go to state 8

    bloco                          shift and go to state 267

state 258

    (138) do_while -> DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm .

    RETURN          reduce using rule 138 (do_while -> DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 138 (do_while -> DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm .)
    ELSE            reduce using rule 138 (do_while -> DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm .)


state 259

    (33) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE . more_arg PONTO_VIRGULA stm
    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE . more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (44) more_arg -> . more_arg L_COCHETE arg R_COCHETE
    (45) more_arg -> . lambda
    (13) lambda -> .

    PONTO_VIRGULA   reduce using rule 13 (lambda -> .)
    ATRIBUICAO      reduce using rule 13 (lambda -> .)
    L_COCHETE       reduce using rule 13 (lambda -> .)

    more_arg                       shift and go to state 268
    lambda                         shift and go to state 264

state 260

    (32) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    stm                            shift and go to state 269
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 261

    (37) atribuicao_mat -> L_CHAVE atribuicao_vet . R_CHAVE VIRGULA atribuicao_mat
    (38) atribuicao_mat -> L_CHAVE atribuicao_vet . R_CHAVE

    R_CHAVE         shift and go to state 270


state 262

    (35) atribuicao_vet -> expression . VIRGULA atribuicao_vet
    (36) atribuicao_vet -> expression .

    VIRGULA         shift and go to state 271
    R_CHAVE         reduce using rule 36 (atribuicao_vet -> expression .)


state 263

    (40) equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg . ATRIBUICAO expression PONTO_VIRGULA stm
    (44) more_arg -> more_arg . L_COCHETE arg R_COCHETE

    ATRIBUICAO      shift and go to state 273
    L_COCHETE       shift and go to state 272


state 264

    (45) more_arg -> lambda .

    ATRIBUICAO      reduce using rule 45 (more_arg -> lambda .)
    L_COCHETE       reduce using rule 45 (more_arg -> lambda .)
    PONTO_VIRGULA   reduce using rule 45 (more_arg -> lambda .)


state 265

    (39) equacao -> pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm .

    RETURN          reduce using rule 39 (equacao -> pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 39 (equacao -> pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm .)
    ELSE            reduce using rule 39 (equacao -> pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm .)


state 266

    (135) for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA . arg R_PARENTESE bloco stm
    (42) arg -> . expression
    (43) arg -> . lambda
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    R_PARENTESE     reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 130
    arg                            shift and go to state 274
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 267

    (136) for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    bloco                          shift and go to state 31
    stm                            shift and go to state 275
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 268

    (33) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg . PONTO_VIRGULA stm
    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg . ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (44) more_arg -> more_arg . L_COCHETE arg R_COCHETE

    PONTO_VIRGULA   shift and go to state 276
    ATRIBUICAO      shift and go to state 277
    L_COCHETE       shift and go to state 272


state 269

    (32) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm .

    RETURN          reduce using rule 32 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 32 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm .)
    ELSE            reduce using rule 32 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm .)


state 270

    (37) atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE . VIRGULA atribuicao_mat
    (38) atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE .

    VIRGULA         shift and go to state 278
    PONTO_VIRGULA   reduce using rule 38 (atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE .)
    R_CHAVE         reduce using rule 38 (atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE .)


state 271

    (35) atribuicao_vet -> expression VIRGULA . atribuicao_vet
    (35) atribuicao_vet -> . expression VIRGULA atribuicao_vet
    (36) atribuicao_vet -> . expression
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 262
    atribuicao_vet                 shift and go to state 279
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 272

    (44) more_arg -> more_arg L_COCHETE . arg R_COCHETE
    (42) arg -> . expression
    (43) arg -> . lambda
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (13) lambda -> .
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    R_COCHETE       reduce using rule 13 (lambda -> .)
    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    arg                            shift and go to state 280
    expression                     shift and go to state 130
    lambda                         shift and go to state 132
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 273

    (40) equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO . expression PONTO_VIRGULA stm
    (123) expression -> . exp
    (124) expression -> . extras
    (125) expression -> . aspa_dupla_exp
    (126) expression -> . aspa_simples_exp
    (90) exp -> . exp_and
    (91) exp -> . exp_ou
    (92) exp -> . exp_menor
    (93) exp -> . exp_maior
    (94) exp -> . exp_menor_igual
    (95) exp -> . exp_maior_igual
    (96) exp -> . exp_igual
    (97) exp -> . exp_diferente
    (98) exp -> . exp_menos
    (99) exp -> . exp_mais
    (100) exp -> . exp_asterisco
    (101) exp -> . exp_barra
    (102) exp -> . exp_mod
    (103) exp -> . menos_exp
    (104) exp -> . mais_exp
    (105) exp -> . asterisco_exp
    (106) exp -> . negacao_exp
    (107) exp -> . e_comercial_exp
    (108) exp -> . const_virgula
    (109) exp -> . const_ponto
    (110) exp -> . const_numero_real
    (111) exp -> . const_numero_int
    (112) exp -> . const_char
    (113) exp -> . const_string
    (114) exp -> . mais_mais
    (115) exp -> . menos_menos
    (116) exp -> . id
    (117) exp -> . true
    (118) exp -> . false
    (119) exp -> . id_atribuicao_exp
    (120) exp -> . id_cochete_exp
    (121) exp -> . parentese_exp
    (122) exp -> . chave_exp
    (129) extras -> . L_PARENTESE tipo R_PARENTESE exp
    (127) aspa_dupla_exp -> . ASPA_DUPLA exp ASPA_DUPLA
    (128) aspa_simples_exp -> . ASPA_SIMPLES exp ASPA_SIMPLES
    (57) exp_and -> . exp AND exp
    (58) exp_ou -> . exp OU exp
    (59) exp_menor -> . exp MENOR exp
    (60) exp_maior -> . exp MAIOR exp
    (61) exp_menor_igual -> . exp MENOR_IGUAL exp
    (62) exp_maior_igual -> . exp MAIOR_IGUAL exp
    (63) exp_igual -> . exp IGUAL exp
    (64) exp_diferente -> . exp DIFERENTE exp
    (65) exp_menos -> . exp MENOS exp
    (66) exp_mais -> . exp MAIS exp
    (67) exp_asterisco -> . exp ASTERISCO exp
    (68) exp_barra -> . exp BARRA exp
    (69) exp_mod -> . exp MOD exp
    (70) menos_exp -> . MENOS exp
    (71) mais_exp -> . MAIS exp
    (72) asterisco_exp -> . ASTERISCO exp
    (73) negacao_exp -> . NEGACAO exp
    (74) e_comercial_exp -> . E_COMERCIAL exp
    (75) const_virgula -> . VIRGULA
    (76) const_ponto -> . PONTO
    (77) const_numero_real -> . NUMERO_REAL
    (78) const_numero_int -> . NUMERO_INT
    (79) const_char -> . CONST_CHAR
    (80) const_string -> . CONST_STRING
    (81) mais_mais -> . MAIS_MAIS
    (82) menos_menos -> . MENOS_MENOS
    (83) id -> . ID
    (84) true -> . TRUE
    (85) false -> . FALSE
    (86) id_atribuicao_exp -> . ID ATRIBUICAO exp
    (87) id_cochete_exp -> . ID L_COCHETE exp R_COCHETE
    (88) parentese_exp -> . L_PARENTESE exp R_PARENTESE
    (89) chave_exp -> . L_CHAVE exp R_CHAVE

    L_PARENTESE     shift and go to state 61
    ASPA_DUPLA      shift and go to state 101
    ASPA_SIMPLES    shift and go to state 102
    MENOS           shift and go to state 103
    MAIS            shift and go to state 104
    ASTERISCO       shift and go to state 105
    NEGACAO         shift and go to state 106
    E_COMERCIAL     shift and go to state 107
    VIRGULA         shift and go to state 108
    PONTO           shift and go to state 109
    NUMERO_REAL     shift and go to state 110
    NUMERO_INT      shift and go to state 111
    CONST_CHAR      shift and go to state 112
    CONST_STRING    shift and go to state 113
    MAIS_MAIS       shift and go to state 114
    MENOS_MENOS     shift and go to state 115
    ID              shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    L_CHAVE         shift and go to state 62

    expression                     shift and go to state 281
    exp                            shift and go to state 64
    extras                         shift and go to state 65
    aspa_dupla_exp                 shift and go to state 66
    aspa_simples_exp               shift and go to state 67
    exp_and                        shift and go to state 68
    exp_ou                         shift and go to state 69
    exp_menor                      shift and go to state 70
    exp_maior                      shift and go to state 71
    exp_menor_igual                shift and go to state 72
    exp_maior_igual                shift and go to state 73
    exp_igual                      shift and go to state 74
    exp_diferente                  shift and go to state 75
    exp_menos                      shift and go to state 76
    exp_mais                       shift and go to state 77
    exp_asterisco                  shift and go to state 78
    exp_barra                      shift and go to state 79
    exp_mod                        shift and go to state 80
    menos_exp                      shift and go to state 81
    mais_exp                       shift and go to state 82
    asterisco_exp                  shift and go to state 83
    negacao_exp                    shift and go to state 84
    e_comercial_exp                shift and go to state 85
    const_virgula                  shift and go to state 86
    const_ponto                    shift and go to state 87
    const_numero_real              shift and go to state 88
    const_numero_int               shift and go to state 89
    const_char                     shift and go to state 90
    const_string                   shift and go to state 91
    mais_mais                      shift and go to state 92
    menos_menos                    shift and go to state 93
    id                             shift and go to state 94
    true                           shift and go to state 95
    false                          shift and go to state 96
    id_atribuicao_exp              shift and go to state 97
    id_cochete_exp                 shift and go to state 98
    parentese_exp                  shift and go to state 99
    chave_exp                      shift and go to state 100

state 274

    (135) for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg . R_PARENTESE bloco stm

    R_PARENTESE     shift and go to state 282


state 275

    (136) for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm .

    RETURN          reduce using rule 136 (for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm .)
    R_CHAVE         reduce using rule 136 (for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm .)
    ELSE            reduce using rule 136 (for -> FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm .)


state 276

    (33) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    stm                            shift and go to state 283
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 277

    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO . L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm

    L_CHAVE         shift and go to state 284


state 278

    (37) atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE VIRGULA . atribuicao_mat
    (37) atribuicao_mat -> . L_CHAVE atribuicao_vet R_CHAVE VIRGULA atribuicao_mat
    (38) atribuicao_mat -> . L_CHAVE atribuicao_vet R_CHAVE

    L_CHAVE         shift and go to state 253

    atribuicao_mat                 shift and go to state 285

state 279

    (35) atribuicao_vet -> expression VIRGULA atribuicao_vet .

    R_CHAVE         reduce using rule 35 (atribuicao_vet -> expression VIRGULA atribuicao_vet .)


state 280

    (44) more_arg -> more_arg L_COCHETE arg . R_COCHETE

    R_COCHETE       shift and go to state 286


state 281

    (40) equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 287


state 282

    (135) for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE . bloco stm
    (26) bloco -> . L_CHAVE stm R_CHAVE

    L_CHAVE         shift and go to state 8

    bloco                          shift and go to state 288

state 283

    (33) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm .

    RETURN          reduce using rule 33 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 33 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm .)
    ELSE            reduce using rule 33 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm .)


state 284

    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE . atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (37) atribuicao_mat -> . L_CHAVE atribuicao_vet R_CHAVE VIRGULA atribuicao_mat
    (38) atribuicao_mat -> . L_CHAVE atribuicao_vet R_CHAVE

    L_CHAVE         shift and go to state 253

    atribuicao_mat                 shift and go to state 289

state 285

    (37) atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE VIRGULA atribuicao_mat .

    PONTO_VIRGULA   reduce using rule 37 (atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE VIRGULA atribuicao_mat .)
    R_CHAVE         reduce using rule 37 (atribuicao_mat -> L_CHAVE atribuicao_vet R_CHAVE VIRGULA atribuicao_mat .)


state 286

    (44) more_arg -> more_arg L_COCHETE arg R_COCHETE .

    ATRIBUICAO      reduce using rule 44 (more_arg -> more_arg L_COCHETE arg R_COCHETE .)
    L_COCHETE       reduce using rule 44 (more_arg -> more_arg L_COCHETE arg R_COCHETE .)
    PONTO_VIRGULA   reduce using rule 44 (more_arg -> more_arg L_COCHETE arg R_COCHETE .)


state 287

    (40) equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    pointer                        shift and go to state 21
    stm                            shift and go to state 290
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    tipo                           shift and go to state 20
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 288

    (135) for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    tipo                           shift and go to state 20
    bloco                          shift and go to state 31
    stm                            shift and go to state 291
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    pointer                        shift and go to state 21
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 289

    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat . R_CHAVE PONTO_VIRGULA stm

    R_CHAVE         shift and go to state 292


state 290

    (40) equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm .

    RETURN          reduce using rule 40 (equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 40 (equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm .)
    ELSE            reduce using rule 40 (equacao -> pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm .)


state 291

    (135) for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm .

    RETURN          reduce using rule 135 (for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm .)
    R_CHAVE         reduce using rule 135 (for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm .)
    ELSE            reduce using rule 135 (for -> FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm .)


state 292

    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE . PONTO_VIRGULA stm

    PONTO_VIRGULA   shift and go to state 293


state 293

    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA . stm
    (2) stm -> . declaracao
    (3) stm -> . equacao
    (4) stm -> . condicional
    (5) stm -> . estrutura_repeticao
    (6) stm -> . mostrar
    (7) stm -> . entrada
    (8) stm -> . break
    (9) stm -> . continue
    (10) stm -> . bloco_stm
    (11) stm -> . lambda
    (29) declaracao -> . tipo pointer ID PONTO_VIRGULA stm
    (30) declaracao -> . tipo pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (31) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE PONTO_VIRGULA stm
    (32) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO atribuicao_mat PONTO_VIRGULA stm
    (33) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg PONTO_VIRGULA stm
    (34) declaracao -> . tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm
    (39) equacao -> . pointer ID L_COCHETE arg R_COCHETE ATRIBUICAO expression PONTO_VIRGULA stm
    (40) equacao -> . pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO expression PONTO_VIRGULA stm
    (41) equacao -> . pointer ID ATRIBUICAO expression PONTO_VIRGULA stm
    (130) condicional -> . IF L_PARENTESE expression R_PARENTESE stm
    (131) condicional -> . IF L_PARENTESE expression R_PARENTESE stm ELSE stm
    (132) estrutura_repeticao -> . for
    (133) estrutura_repeticao -> . while
    (134) estrutura_repeticao -> . do_while
    (46) mostrar -> . mostrar1
    (47) mostrar -> . mostrar2
    (53) entrada -> . SCANF L_PARENTESE expression_entrada R_PARENTESE PONTO_VIRGULA stm
    (14) break -> . BREAK PONTO_VIRGULA stm
    (15) continue -> . CONTINUE PONTO_VIRGULA stm
    (12) bloco_stm -> . bloco stm
    (13) lambda -> .
    (16) tipo -> . tipo_VOID
    (17) tipo -> . tipo_BOOLEAN
    (18) tipo -> . tipo_CHAR
    (19) tipo -> . tipo_INT
    (20) tipo -> . tipo_FLOAT
    (27) pointer -> . pointer ASTERISCO
    (28) pointer -> . lambda
    (135) for -> . FOR L_PARENTESE tipo ID ATRIBUICAO expression PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (136) for -> . FOR L_PARENTESE arg PONTO_VIRGULA arg PONTO_VIRGULA arg R_PARENTESE bloco stm
    (137) while -> . WHILE L_PARENTESE expression R_PARENTESE bloco stm
    (138) do_while -> . DO bloco WHILE L_PARENTESE expression R_PARENTESE PONTO_VIRGULA stm
    (48) mostrar1 -> . PRINTF L_PARENTESE CONST_STRING R_PARENTESE PONTO_VIRGULA stm
    (49) mostrar2 -> . PRINTF L_PARENTESE expression_mostrar R_PARENTESE PONTO_VIRGULA stm
    (26) bloco -> . L_CHAVE stm R_CHAVE
    (21) tipo_VOID -> . VOID
    (22) tipo_BOOLEAN -> . BOOLEAN
    (23) tipo_CHAR -> . CHAR
    (24) tipo_INT -> . INT
    (25) tipo_FLOAT -> . FLOAT

    IF              shift and go to state 22
    SCANF           shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    RETURN          reduce using rule 13 (lambda -> .)
    R_CHAVE         reduce using rule 13 (lambda -> .)
    ELSE            reduce using rule 13 (lambda -> .)
    ID              reduce using rule 13 (lambda -> .)
    ASTERISCO       reduce using rule 13 (lambda -> .)
    FOR             shift and go to state 37
    WHILE           shift and go to state 38
    DO              shift and go to state 39
    PRINTF          shift and go to state 40
    L_CHAVE         shift and go to state 8
    VOID            shift and go to state 41
    BOOLEAN         shift and go to state 42
    CHAR            shift and go to state 43
    INT             shift and go to state 7
    FLOAT           shift and go to state 44

    tipo                           shift and go to state 20
    pointer                        shift and go to state 21
    stm                            shift and go to state 294
    declaracao                     shift and go to state 10
    equacao                        shift and go to state 11
    condicional                    shift and go to state 12
    estrutura_repeticao            shift and go to state 13
    mostrar                        shift and go to state 14
    entrada                        shift and go to state 15
    break                          shift and go to state 16
    continue                       shift and go to state 17
    bloco_stm                      shift and go to state 18
    lambda                         shift and go to state 19
    for                            shift and go to state 23
    while                          shift and go to state 24
    do_while                       shift and go to state 25
    mostrar1                       shift and go to state 26
    mostrar2                       shift and go to state 27
    bloco                          shift and go to state 31
    tipo_VOID                      shift and go to state 32
    tipo_BOOLEAN                   shift and go to state 33
    tipo_CHAR                      shift and go to state 34
    tipo_INT                       shift and go to state 35
    tipo_FLOAT                     shift and go to state 36

state 294

    (34) declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm .

    RETURN          reduce using rule 34 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm .)
    R_CHAVE         reduce using rule 34 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm .)
    ELSE            reduce using rule 34 (declaracao -> tipo pointer ID L_COCHETE arg R_COCHETE L_COCHETE arg R_COCHETE more_arg ATRIBUICAO L_CHAVE atribuicao_mat R_CHAVE PONTO_VIRGULA stm .)

